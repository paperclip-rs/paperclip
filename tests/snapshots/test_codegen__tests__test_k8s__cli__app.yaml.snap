---
source: tests/test_codegen.rs
expression: data

---

name: test-k8s-cli
version: "0.0.0"

settings:
- SubcommandRequiredElseHelp

args:
    - ca-cert:
        long: ca-cert
        help: Path to CA certificate to be added to trust store.
        takes_value: true
    - client-cert:
        long: client-cert
        help: Path to certificate for TLS client verification.
        takes_value: true
        requires:
            - client-key
    - client-key:
        long: client-key
        help: Path to private key for TLS client verification.
        takes_value: true
        requires:
            - client-cert
    - url:
        long: url
        help: Base URL for your API.
        takes_value: true
        required: true
    - verbose:
        short: v
        long: verbose
        help: Enable verbose mode.
    - timeout:
        short: t
        long: timeout
        help: Set the request timeout.
        takes_value: true

subcommands:

  - create-admissionregistration-v1beta1-mutating-webhook-configuration:
      about: "create a MutatingWebhookConfiguration"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: MutatingWebhookConfiguration) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-admissionregistration-v1beta1-mutating-webhook-configuration:
      about: "read the specified MutatingWebhookConfiguration"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the MutatingWebhookConfiguration"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-admissionregistration-v1beta1-mutating-webhook-configuration:
      about: "replace the specified MutatingWebhookConfiguration"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: MutatingWebhookConfiguration) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the MutatingWebhookConfiguration"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-admissionregistration-v1beta1-mutating-webhook-configuration:
      about: "list or watch objects of kind MutatingWebhookConfiguration"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true



  - create-admissionregistration-v1beta1-validating-webhook-configuration:
      about: "create a ValidatingWebhookConfiguration"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ValidatingWebhookConfiguration) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-admissionregistration-v1beta1-validating-webhook-configuration:
      about: "read the specified ValidatingWebhookConfiguration"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ValidatingWebhookConfiguration"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-admissionregistration-v1beta1-validating-webhook-configuration:
      about: "replace the specified ValidatingWebhookConfiguration"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ValidatingWebhookConfiguration) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ValidatingWebhookConfiguration"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-admissionregistration-v1beta1-validating-webhook-configuration:
      about: "list or watch objects of kind ValidatingWebhookConfiguration"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true



  - create-apps-v1-namespaced-controller-revision:
      about: "create a ControllerRevision"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ControllerRevision) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1-namespaced-controller-revision:
      about: "read the specified ControllerRevision"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ControllerRevision"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1-namespaced-controller-revision:
      about: "replace the specified ControllerRevision"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ControllerRevision) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ControllerRevision"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-apps-v1-controller-revision-for-all-namespaces:
      about: "list or watch objects of kind ControllerRevision"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-apps-v1-namespaced-controller-revision:
      about: "list or watch objects of kind ControllerRevision"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - create-apps-v1-namespaced-daemon-set:
      about: "create a DaemonSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DaemonSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1-namespaced-daemon-set:
      about: "read the specified DaemonSet"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1-namespaced-daemon-set:
      about: "replace the specified DaemonSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DaemonSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1-namespaced-daemon-set-status:
      about: "read status of the specified DaemonSet"
      args:
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1-namespaced-daemon-set-status:
      about: "replace status of the specified DaemonSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DaemonSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-apps-v1-daemon-set-for-all-namespaces:
      about: "list or watch objects of kind DaemonSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-apps-v1-namespaced-daemon-set:
      about: "list or watch objects of kind DaemonSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true




  - create-apps-v1-namespaced-deployment:
      about: "create a Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Deployment) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1-namespaced-deployment:
      about: "read the specified Deployment"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1-namespaced-deployment:
      about: "replace the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Deployment) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1-namespaced-deployment-status:
      about: "read status of the specified Deployment"
      args:
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1-namespaced-deployment-status:
      about: "replace status of the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Deployment) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-apps-v1-deployment-for-all-namespaces:
      about: "list or watch objects of kind Deployment"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-apps-v1-namespaced-deployment:
      about: "list or watch objects of kind Deployment"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true




  - create-apps-v1-namespaced-replica-set:
      about: "create a ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ReplicaSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1-namespaced-replica-set:
      about: "read the specified ReplicaSet"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1-namespaced-replica-set:
      about: "replace the specified ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ReplicaSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1-namespaced-replica-set-status:
      about: "read status of the specified ReplicaSet"
      args:
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1-namespaced-replica-set-status:
      about: "replace status of the specified ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ReplicaSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-apps-v1-namespaced-replica-set:
      about: "list or watch objects of kind ReplicaSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-apps-v1-replica-set-for-all-namespaces:
      about: "list or watch objects of kind ReplicaSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true






  - create-apps-v1-namespaced-stateful-set:
      about: "create a StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: StatefulSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1-namespaced-stateful-set:
      about: "read the specified StatefulSet"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1-namespaced-stateful-set:
      about: "replace the specified StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: StatefulSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1-namespaced-stateful-set-status:
      about: "read status of the specified StatefulSet"
      args:
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1-namespaced-stateful-set-status:
      about: "replace status of the specified StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: StatefulSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-apps-v1-namespaced-stateful-set:
      about: "list or watch objects of kind StatefulSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-apps-v1-stateful-set-for-all-namespaces:
      about: "list or watch objects of kind StatefulSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true




  - create-apps-v1beta1-namespaced-controller-revision:
      about: "create a ControllerRevision"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ControllerRevision) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1beta1-namespaced-controller-revision:
      about: "read the specified ControllerRevision"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ControllerRevision"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1beta1-namespaced-controller-revision:
      about: "replace the specified ControllerRevision"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ControllerRevision) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ControllerRevision"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-apps-v1beta1-controller-revision-for-all-namespaces:
      about: "list or watch objects of kind ControllerRevision"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-apps-v1beta1-namespaced-controller-revision:
      about: "list or watch objects of kind ControllerRevision"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - create-apps-v1beta1-namespaced-deployment:
      about: "create a Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Deployment) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1beta1-namespaced-deployment:
      about: "read the specified Deployment"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1beta1-namespaced-deployment:
      about: "replace the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Deployment) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1beta1-namespaced-deployment-status:
      about: "read status of the specified Deployment"
      args:
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1beta1-namespaced-deployment-status:
      about: "replace status of the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Deployment) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-apps-v1beta1-deployment-for-all-namespaces:
      about: "list or watch objects of kind Deployment"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-apps-v1beta1-namespaced-deployment:
      about: "list or watch objects of kind Deployment"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - create-apps-v1beta1-namespaced-deployment-rollback:
      about: "create rollback of a Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeploymentRollback) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DeploymentRollback"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true







  - read-apps-v1beta1-namespaced-deployment-scale:
      about: "read scale of the specified Deployment"
      args:
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1beta1-namespaced-deployment-scale:
      about: "replace scale of the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Scale) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1beta1-namespaced-stateful-set-scale:
      about: "read scale of the specified StatefulSet"
      args:
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1beta1-namespaced-stateful-set-scale:
      about: "replace scale of the specified StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Scale) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true



  - create-apps-v1beta1-namespaced-stateful-set:
      about: "create a StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: StatefulSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1beta1-namespaced-stateful-set:
      about: "read the specified StatefulSet"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1beta1-namespaced-stateful-set:
      about: "replace the specified StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: StatefulSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1beta1-namespaced-stateful-set-status:
      about: "read status of the specified StatefulSet"
      args:
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1beta1-namespaced-stateful-set-status:
      about: "replace status of the specified StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: StatefulSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-apps-v1beta1-namespaced-stateful-set:
      about: "list or watch objects of kind StatefulSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-apps-v1beta1-stateful-set-for-all-namespaces:
      about: "list or watch objects of kind StatefulSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true




  - create-apps-v1beta2-namespaced-controller-revision:
      about: "create a ControllerRevision"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ControllerRevision) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1beta2-namespaced-controller-revision:
      about: "read the specified ControllerRevision"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ControllerRevision"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1beta2-namespaced-controller-revision:
      about: "replace the specified ControllerRevision"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ControllerRevision) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ControllerRevision"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-apps-v1beta2-controller-revision-for-all-namespaces:
      about: "list or watch objects of kind ControllerRevision"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-apps-v1beta2-namespaced-controller-revision:
      about: "list or watch objects of kind ControllerRevision"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - create-apps-v1beta2-namespaced-daemon-set:
      about: "create a DaemonSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DaemonSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1beta2-namespaced-daemon-set:
      about: "read the specified DaemonSet"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1beta2-namespaced-daemon-set:
      about: "replace the specified DaemonSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DaemonSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1beta2-namespaced-daemon-set-status:
      about: "read status of the specified DaemonSet"
      args:
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1beta2-namespaced-daemon-set-status:
      about: "replace status of the specified DaemonSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DaemonSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-apps-v1beta2-daemon-set-for-all-namespaces:
      about: "list or watch objects of kind DaemonSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-apps-v1beta2-namespaced-daemon-set:
      about: "list or watch objects of kind DaemonSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true




  - create-apps-v1beta2-namespaced-deployment:
      about: "create a Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Deployment) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1beta2-namespaced-deployment:
      about: "read the specified Deployment"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1beta2-namespaced-deployment:
      about: "replace the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Deployment) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1beta2-namespaced-deployment-status:
      about: "read status of the specified Deployment"
      args:
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1beta2-namespaced-deployment-status:
      about: "replace status of the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Deployment) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-apps-v1beta2-deployment-for-all-namespaces:
      about: "list or watch objects of kind Deployment"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-apps-v1beta2-namespaced-deployment:
      about: "list or watch objects of kind Deployment"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true




  - create-apps-v1beta2-namespaced-replica-set:
      about: "create a ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ReplicaSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1beta2-namespaced-replica-set:
      about: "read the specified ReplicaSet"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1beta2-namespaced-replica-set:
      about: "replace the specified ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ReplicaSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1beta2-namespaced-replica-set-status:
      about: "read status of the specified ReplicaSet"
      args:
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1beta2-namespaced-replica-set-status:
      about: "replace status of the specified ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ReplicaSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-apps-v1beta2-namespaced-replica-set:
      about: "list or watch objects of kind ReplicaSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-apps-v1beta2-replica-set-for-all-namespaces:
      about: "list or watch objects of kind ReplicaSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true






  - read-apps-v1beta2-namespaced-deployment-scale:
      about: "read scale of the specified Deployment"
      args:
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1beta2-namespaced-deployment-scale:
      about: "replace scale of the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Scale) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1beta2-namespaced-replica-set-scale:
      about: "read scale of the specified ReplicaSet"
      args:
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1beta2-namespaced-replica-set-scale:
      about: "replace scale of the specified ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Scale) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1beta2-namespaced-stateful-set-scale:
      about: "read scale of the specified StatefulSet"
      args:
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1beta2-namespaced-stateful-set-scale:
      about: "replace scale of the specified StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Scale) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true



  - create-apps-v1beta2-namespaced-stateful-set:
      about: "create a StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: StatefulSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1beta2-namespaced-stateful-set:
      about: "read the specified StatefulSet"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1beta2-namespaced-stateful-set:
      about: "replace the specified StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: StatefulSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1beta2-namespaced-stateful-set-status:
      about: "read status of the specified StatefulSet"
      args:
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1beta2-namespaced-stateful-set-status:
      about: "replace status of the specified StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: StatefulSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-apps-v1beta2-namespaced-stateful-set:
      about: "list or watch objects of kind StatefulSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-apps-v1beta2-stateful-set-for-all-namespaces:
      about: "list or watch objects of kind StatefulSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true




  - create-auditregistration-v1alpha1-audit-sink:
      about: "create an AuditSink"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: AuditSink) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-auditregistration-v1alpha1-audit-sink:
      about: "read the specified AuditSink"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the AuditSink"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-auditregistration-v1alpha1-audit-sink:
      about: "replace the specified AuditSink"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: AuditSink) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the AuditSink"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-auditregistration-v1alpha1-audit-sink:
      about: "list or watch objects of kind AuditSink"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true







  - create-authentication-v1-token-review:
      about: "create a TokenReview"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: TokenReview) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true




  - create-authentication-v1beta1-token-review:
      about: "create a TokenReview"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: TokenReview) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true




  - create-authorization-v1-namespaced-local-subject-access-review:
      about: "create a LocalSubjectAccessReview"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: LocalSubjectAccessReview) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true





  - create-authorization-v1-self-subject-access-review:
      about: "create a SelfSubjectAccessReview"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: SelfSubjectAccessReview) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - create-authorization-v1-self-subject-rules-review:
      about: "create a SelfSubjectRulesReview"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: SelfSubjectRulesReview) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - create-authorization-v1-subject-access-review:
      about: "create a SubjectAccessReview"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: SubjectAccessReview) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true




  - create-authorization-v1beta1-namespaced-local-subject-access-review:
      about: "create a LocalSubjectAccessReview"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: LocalSubjectAccessReview) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true





  - create-authorization-v1beta1-self-subject-access-review:
      about: "create a SelfSubjectAccessReview"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: SelfSubjectAccessReview) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - create-authorization-v1beta1-self-subject-rules-review:
      about: "create a SelfSubjectRulesReview"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: SelfSubjectRulesReview) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - create-authorization-v1beta1-subject-access-review:
      about: "create a SubjectAccessReview"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: SubjectAccessReview) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true





  - create-autoscaling-v1-namespaced-horizontal-pod-autoscaler:
      about: "create a HorizontalPodAutoscaler"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: HorizontalPodAutoscaler) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-autoscaling-v1-namespaced-horizontal-pod-autoscaler:
      about: "read the specified HorizontalPodAutoscaler"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-autoscaling-v1-namespaced-horizontal-pod-autoscaler:
      about: "replace the specified HorizontalPodAutoscaler"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: HorizontalPodAutoscaler) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-autoscaling-v1-namespaced-horizontal-pod-autoscaler-status:
      about: "read status of the specified HorizontalPodAutoscaler"
      args:
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-autoscaling-v1-namespaced-horizontal-pod-autoscaler-status:
      about: "replace status of the specified HorizontalPodAutoscaler"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: HorizontalPodAutoscaler) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-autoscaling-v1-horizontal-pod-autoscaler-for-all-namespaces:
      about: "list or watch objects of kind HorizontalPodAutoscaler"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-autoscaling-v1-namespaced-horizontal-pod-autoscaler:
      about: "list or watch objects of kind HorizontalPodAutoscaler"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true



  - read-core-v1-namespaced-replication-controller-scale:
      about: "read scale of the specified ReplicationController"
      args:
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-namespaced-replication-controller-scale:
      about: "replace scale of the specified ReplicationController"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Scale) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1-namespaced-deployment-scale:
      about: "read scale of the specified Deployment"
      args:
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1-namespaced-deployment-scale:
      about: "replace scale of the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Scale) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1-namespaced-replica-set-scale:
      about: "read scale of the specified ReplicaSet"
      args:
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1-namespaced-replica-set-scale:
      about: "replace scale of the specified ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Scale) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apps-v1-namespaced-stateful-set-scale:
      about: "read scale of the specified StatefulSet"
      args:
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apps-v1-namespaced-stateful-set-scale:
      about: "replace scale of the specified StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Scale) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true






  - create-autoscaling-v2beta1-namespaced-horizontal-pod-autoscaler:
      about: "create a HorizontalPodAutoscaler"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: HorizontalPodAutoscaler) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-autoscaling-v2beta1-namespaced-horizontal-pod-autoscaler:
      about: "read the specified HorizontalPodAutoscaler"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-autoscaling-v2beta1-namespaced-horizontal-pod-autoscaler:
      about: "replace the specified HorizontalPodAutoscaler"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: HorizontalPodAutoscaler) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-autoscaling-v2beta1-namespaced-horizontal-pod-autoscaler-status:
      about: "read status of the specified HorizontalPodAutoscaler"
      args:
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-autoscaling-v2beta1-namespaced-horizontal-pod-autoscaler-status:
      about: "replace status of the specified HorizontalPodAutoscaler"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: HorizontalPodAutoscaler) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-autoscaling-v2beta1-horizontal-pod-autoscaler-for-all-namespaces:
      about: "list or watch objects of kind HorizontalPodAutoscaler"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-autoscaling-v2beta1-namespaced-horizontal-pod-autoscaler:
      about: "list or watch objects of kind HorizontalPodAutoscaler"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true














  - create-autoscaling-v2beta2-namespaced-horizontal-pod-autoscaler:
      about: "create a HorizontalPodAutoscaler"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: HorizontalPodAutoscaler) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-autoscaling-v2beta2-namespaced-horizontal-pod-autoscaler:
      about: "read the specified HorizontalPodAutoscaler"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-autoscaling-v2beta2-namespaced-horizontal-pod-autoscaler:
      about: "replace the specified HorizontalPodAutoscaler"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: HorizontalPodAutoscaler) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-autoscaling-v2beta2-namespaced-horizontal-pod-autoscaler-status:
      about: "read status of the specified HorizontalPodAutoscaler"
      args:
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-autoscaling-v2beta2-namespaced-horizontal-pod-autoscaler-status:
      about: "replace status of the specified HorizontalPodAutoscaler"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: HorizontalPodAutoscaler) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-autoscaling-v2beta2-horizontal-pod-autoscaler-for-all-namespaces:
      about: "list or watch objects of kind HorizontalPodAutoscaler"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-autoscaling-v2beta2-namespaced-horizontal-pod-autoscaler:
      about: "list or watch objects of kind HorizontalPodAutoscaler"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true














  - create-batch-v1-namespaced-job:
      about: "create a Job"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Job) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-batch-v1-namespaced-job:
      about: "read the specified Job"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Job"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-batch-v1-namespaced-job:
      about: "replace the specified Job"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Job) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Job"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-batch-v1-namespaced-job-status:
      about: "read status of the specified Job"
      args:
        - name:
            long: name
            required: true
            help: "name of the Job"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-batch-v1-namespaced-job-status:
      about: "replace status of the specified Job"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Job) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Job"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-batch-v1-job-for-all-namespaces:
      about: "list or watch objects of kind Job"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-batch-v1-namespaced-job:
      about: "list or watch objects of kind Job"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true



  - create-batch-v1beta1-namespaced-cron-job:
      about: "create a CronJob"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: CronJob) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-batch-v1beta1-namespaced-cron-job:
      about: "read the specified CronJob"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CronJob"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-batch-v1beta1-namespaced-cron-job:
      about: "replace the specified CronJob"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: CronJob) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CronJob"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-batch-v1beta1-namespaced-cron-job-status:
      about: "read status of the specified CronJob"
      args:
        - name:
            long: name
            required: true
            help: "name of the CronJob"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-batch-v1beta1-namespaced-cron-job-status:
      about: "replace status of the specified CronJob"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: CronJob) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CronJob"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-batch-v1beta1-cron-job-for-all-namespaces:
      about: "list or watch objects of kind CronJob"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-batch-v1beta1-namespaced-cron-job:
      about: "list or watch objects of kind CronJob"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true




  - create-batch-v2alpha1-namespaced-cron-job:
      about: "create a CronJob"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: CronJob) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-batch-v2alpha1-namespaced-cron-job:
      about: "read the specified CronJob"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CronJob"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-batch-v2alpha1-namespaced-cron-job:
      about: "replace the specified CronJob"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: CronJob) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CronJob"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-batch-v2alpha1-namespaced-cron-job-status:
      about: "read status of the specified CronJob"
      args:
        - name:
            long: name
            required: true
            help: "name of the CronJob"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-batch-v2alpha1-namespaced-cron-job-status:
      about: "replace status of the specified CronJob"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: CronJob) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CronJob"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-batch-v2alpha1-cron-job-for-all-namespaces:
      about: "list or watch objects of kind CronJob"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-batch-v2alpha1-namespaced-cron-job:
      about: "list or watch objects of kind CronJob"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true




  - create-certificates-v1beta1-certificate-signing-request:
      about: "create a CertificateSigningRequest"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: CertificateSigningRequest) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-certificates-v1beta1-certificate-signing-request:
      about: "read the specified CertificateSigningRequest"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CertificateSigningRequest"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-certificates-v1beta1-certificate-signing-request:
      about: "replace the specified CertificateSigningRequest"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: CertificateSigningRequest) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CertificateSigningRequest"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-certificates-v1beta1-certificate-signing-request-approval:
      about: "replace approval of the specified CertificateSigningRequest"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: CertificateSigningRequest) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CertificateSigningRequest"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-certificates-v1beta1-certificate-signing-request-status:
      about: "read status of the specified CertificateSigningRequest"
      args:
        - name:
            long: name
            required: true
            help: "name of the CertificateSigningRequest"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-certificates-v1beta1-certificate-signing-request-status:
      about: "replace status of the specified CertificateSigningRequest"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: CertificateSigningRequest) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CertificateSigningRequest"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-certificates-v1beta1-certificate-signing-request:
      about: "list or watch objects of kind CertificateSigningRequest"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true



  - create-coordination-v1-namespaced-lease:
      about: "create a Lease"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Lease) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-coordination-v1-namespaced-lease:
      about: "read the specified Lease"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Lease"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-coordination-v1-namespaced-lease:
      about: "replace the specified Lease"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Lease) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Lease"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-coordination-v1-lease-for-all-namespaces:
      about: "list or watch objects of kind Lease"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-coordination-v1-namespaced-lease:
      about: "list or watch objects of kind Lease"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - create-coordination-v1beta1-namespaced-lease:
      about: "create a Lease"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Lease) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-coordination-v1beta1-namespaced-lease:
      about: "read the specified Lease"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Lease"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-coordination-v1beta1-namespaced-lease:
      about: "replace the specified Lease"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Lease) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Lease"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-coordination-v1beta1-lease-for-all-namespaces:
      about: "list or watch objects of kind Lease"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-coordination-v1beta1-namespaced-lease:
      about: "list or watch objects of kind Lease"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true








  - create-core-v1-namespaced-binding:
      about: "create a Binding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Binding) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - create-core-v1-namespaced-pod-binding:
      about: "create binding of a Pod"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Binding) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Binding"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true








  - read-core-v1-component-status:
      about: "read the specified ComponentStatus"
      args:
        - name:
            long: name
            required: true
            help: "name of the ComponentStatus"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-core-v1-component-status:
      about: "list objects of kind ComponentStatus"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true

  - create-core-v1-namespaced-config-map:
      about: "create a ConfigMap"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ConfigMap) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-namespaced-config-map:
      about: "read the specified ConfigMap"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ConfigMap"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-namespaced-config-map:
      about: "replace the specified ConfigMap"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ConfigMap) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ConfigMap"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true



  - list-core-v1-config-map-for-all-namespaces:
      about: "list or watch objects of kind ConfigMap"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-core-v1-namespaced-config-map:
      about: "list or watch objects of kind ConfigMap"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true






















  - create-core-v1-namespaced-endpoints:
      about: "create Endpoints"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Endpoints) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-namespaced-endpoints:
      about: "read the specified Endpoints"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Endpoints"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-namespaced-endpoints:
      about: "replace the specified Endpoints"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Endpoints) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Endpoints"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-core-v1-endpoints-for-all-namespaces:
      about: "list or watch objects of kind Endpoints"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-core-v1-namespaced-endpoints:
      about: "list or watch objects of kind Endpoints"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true




  - create-core-v1-namespaced-event:
      about: "create an Event"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Event) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-namespaced-event:
      about: "read the specified Event"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Event"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-namespaced-event:
      about: "replace the specified Event"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Event) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Event"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-core-v1-event-for-all-namespaces:
      about: "list or watch objects of kind Event"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-core-v1-namespaced-event:
      about: "list or watch objects of kind Event"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true





















  - create-core-v1-namespaced-limit-range:
      about: "create a LimitRange"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: LimitRange) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-namespaced-limit-range:
      about: "read the specified LimitRange"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the LimitRange"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-namespaced-limit-range:
      about: "replace the specified LimitRange"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: LimitRange) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the LimitRange"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-core-v1-limit-range-for-all-namespaces:
      about: "list or watch objects of kind LimitRange"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-core-v1-namespaced-limit-range:
      about: "list or watch objects of kind LimitRange"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true






  - create-core-v1-namespace:
      about: "create a Namespace"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Namespace) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-namespace:
      about: "read the specified Namespace"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Namespace"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-namespace:
      about: "replace the specified Namespace"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Namespace) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Namespace"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-namespace-finalize:
      about: "replace finalize of the specified Namespace"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Namespace) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Namespace"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-namespace-status:
      about: "read status of the specified Namespace"
      args:
        - name:
            long: name
            required: true
            help: "name of the Namespace"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-namespace-status:
      about: "replace status of the specified Namespace"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Namespace) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Namespace"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-core-v1-namespace:
      about: "list or watch objects of kind Namespace"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true




  - create-core-v1-node:
      about: "create a Node"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Node) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-node:
      about: "read the specified Node"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Node"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-node:
      about: "replace the specified Node"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Node) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Node"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-node-status:
      about: "read status of the specified Node"
      args:
        - name:
            long: name
            required: true
            help: "name of the Node"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-node-status:
      about: "replace status of the specified Node"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Node) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Node"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true







  - list-core-v1-node:
      about: "list or watch objects of kind Node"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true









  - create-core-v1-persistent-volume:
      about: "create a PersistentVolume"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PersistentVolume) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-persistent-volume:
      about: "read the specified PersistentVolume"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PersistentVolume"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-persistent-volume:
      about: "replace the specified PersistentVolume"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PersistentVolume) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PersistentVolume"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-persistent-volume-status:
      about: "read status of the specified PersistentVolume"
      args:
        - name:
            long: name
            required: true
            help: "name of the PersistentVolume"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-persistent-volume-status:
      about: "replace status of the specified PersistentVolume"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PersistentVolume) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PersistentVolume"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - create-core-v1-namespaced-persistent-volume-claim:
      about: "create a PersistentVolumeClaim"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PersistentVolumeClaim) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-namespaced-persistent-volume-claim:
      about: "read the specified PersistentVolumeClaim"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PersistentVolumeClaim"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-namespaced-persistent-volume-claim:
      about: "replace the specified PersistentVolumeClaim"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PersistentVolumeClaim) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PersistentVolumeClaim"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-namespaced-persistent-volume-claim-status:
      about: "read status of the specified PersistentVolumeClaim"
      args:
        - name:
            long: name
            required: true
            help: "name of the PersistentVolumeClaim"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-namespaced-persistent-volume-claim-status:
      about: "replace status of the specified PersistentVolumeClaim"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PersistentVolumeClaim) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PersistentVolumeClaim"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-core-v1-namespaced-persistent-volume-claim:
      about: "list or watch objects of kind PersistentVolumeClaim"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-core-v1-persistent-volume-claim-for-all-namespaces:
      about: "list or watch objects of kind PersistentVolumeClaim"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true




  - list-core-v1-persistent-volume:
      about: "list or watch objects of kind PersistentVolume"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true




  - create-core-v1-namespaced-pod:
      about: "create a Pod"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Pod) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-namespaced-pod:
      about: "read the specified Pod"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Pod"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-namespaced-pod:
      about: "replace the specified Pod"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Pod) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Pod"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-namespaced-pod-status:
      about: "read status of the specified Pod"
      args:
        - name:
            long: name
            required: true
            help: "name of the Pod"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-namespaced-pod-status:
      about: "replace status of the specified Pod"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Pod) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Pod"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true







  - list-core-v1-namespaced-pod:
      about: "list or watch objects of kind Pod"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-core-v1-pod-for-all-namespaces:
      about: "list or watch objects of kind Pod"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true





  - create-core-v1-namespaced-pod-template:
      about: "create a PodTemplate"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PodTemplate) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-namespaced-pod-template:
      about: "read the specified PodTemplate"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodTemplate"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-namespaced-pod-template:
      about: "replace the specified PodTemplate"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PodTemplate) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodTemplate"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-core-v1-namespaced-pod-template:
      about: "list or watch objects of kind PodTemplate"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-core-v1-pod-template-for-all-namespaces:
      about: "list or watch objects of kind PodTemplate"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true









  - create-core-v1-namespaced-replication-controller:
      about: "create a ReplicationController"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ReplicationController) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-namespaced-replication-controller:
      about: "read the specified ReplicationController"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicationController"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-namespaced-replication-controller:
      about: "replace the specified ReplicationController"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ReplicationController) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicationController"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-namespaced-replication-controller-status:
      about: "read status of the specified ReplicationController"
      args:
        - name:
            long: name
            required: true
            help: "name of the ReplicationController"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-namespaced-replication-controller-status:
      about: "replace status of the specified ReplicationController"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ReplicationController) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicationController"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-core-v1-namespaced-replication-controller:
      about: "list or watch objects of kind ReplicationController"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-core-v1-replication-controller-for-all-namespaces:
      about: "list or watch objects of kind ReplicationController"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true




  - create-core-v1-namespaced-resource-quota:
      about: "create a ResourceQuota"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ResourceQuota) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-namespaced-resource-quota:
      about: "read the specified ResourceQuota"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ResourceQuota"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-namespaced-resource-quota:
      about: "replace the specified ResourceQuota"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ResourceQuota) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ResourceQuota"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-namespaced-resource-quota-status:
      about: "read status of the specified ResourceQuota"
      args:
        - name:
            long: name
            required: true
            help: "name of the ResourceQuota"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-namespaced-resource-quota-status:
      about: "replace status of the specified ResourceQuota"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ResourceQuota) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ResourceQuota"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-core-v1-namespaced-resource-quota:
      about: "list or watch objects of kind ResourceQuota"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-core-v1-resource-quota-for-all-namespaces:
      about: "list or watch objects of kind ResourceQuota"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true









  - create-core-v1-namespaced-secret:
      about: "create a Secret"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Secret) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-namespaced-secret:
      about: "read the specified Secret"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Secret"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-namespaced-secret:
      about: "replace the specified Secret"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Secret) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Secret"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true



  - list-core-v1-namespaced-secret:
      about: "list or watch objects of kind Secret"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-core-v1-secret-for-all-namespaces:
      about: "list or watch objects of kind Secret"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true





  - create-core-v1-namespaced-service:
      about: "create a Service"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Service) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-namespaced-service:
      about: "read the specified Service"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Service"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-namespaced-service:
      about: "replace the specified Service"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Service) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Service"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-namespaced-service-status:
      about: "read status of the specified Service"
      args:
        - name:
            long: name
            required: true
            help: "name of the Service"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-namespaced-service-status:
      about: "replace status of the specified Service"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Service) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Service"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - create-core-v1-namespaced-service-account:
      about: "create a ServiceAccount"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ServiceAccount) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-core-v1-namespaced-service-account:
      about: "read the specified ServiceAccount"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ServiceAccount"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-core-v1-namespaced-service-account:
      about: "replace the specified ServiceAccount"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ServiceAccount) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ServiceAccount"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-core-v1-namespaced-service-account:
      about: "list or watch objects of kind ServiceAccount"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-core-v1-service-account-for-all-namespaces:
      about: "list or watch objects of kind ServiceAccount"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true


  - list-core-v1-namespaced-service:
      about: "list or watch objects of kind Service"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-core-v1-service-for-all-namespaces:
      about: "list or watch objects of kind Service"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true






















  - create-events-v1beta1-namespaced-event:
      about: "create an Event"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Event) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-events-v1beta1-namespaced-event:
      about: "read the specified Event"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Event"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-events-v1beta1-namespaced-event:
      about: "replace the specified Event"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Event) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Event"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-events-v1beta1-event-for-all-namespaces:
      about: "list or watch objects of kind Event"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-events-v1beta1-namespaced-event:
      about: "list or watch objects of kind Event"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true





  - create-extensions-v1beta1-namespaced-daemon-set:
      about: "create a DaemonSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DaemonSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-extensions-v1beta1-namespaced-daemon-set:
      about: "read the specified DaemonSet"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-extensions-v1beta1-namespaced-daemon-set:
      about: "replace the specified DaemonSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DaemonSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-extensions-v1beta1-namespaced-daemon-set-status:
      about: "read status of the specified DaemonSet"
      args:
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-extensions-v1beta1-namespaced-daemon-set-status:
      about: "replace status of the specified DaemonSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DaemonSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-extensions-v1beta1-daemon-set-for-all-namespaces:
      about: "list or watch objects of kind DaemonSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-extensions-v1beta1-namespaced-daemon-set:
      about: "list or watch objects of kind DaemonSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true




  - create-extensions-v1beta1-namespaced-deployment:
      about: "create a Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Deployment) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-extensions-v1beta1-namespaced-deployment:
      about: "read the specified Deployment"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-extensions-v1beta1-namespaced-deployment:
      about: "replace the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Deployment) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-extensions-v1beta1-namespaced-deployment-status:
      about: "read status of the specified Deployment"
      args:
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-extensions-v1beta1-namespaced-deployment-status:
      about: "replace status of the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Deployment) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-extensions-v1beta1-deployment-for-all-namespaces:
      about: "list or watch objects of kind Deployment"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-extensions-v1beta1-namespaced-deployment:
      about: "list or watch objects of kind Deployment"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - create-extensions-v1beta1-namespaced-deployment-rollback:
      about: "create rollback of a Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeploymentRollback) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DeploymentRollback"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true









  - create-extensions-v1beta1-namespaced-ingress:
      about: "create an Ingress"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Ingress) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-extensions-v1beta1-namespaced-ingress:
      about: "read the specified Ingress"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Ingress"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-extensions-v1beta1-namespaced-ingress:
      about: "replace the specified Ingress"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Ingress) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Ingress"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-extensions-v1beta1-namespaced-ingress-status:
      about: "read status of the specified Ingress"
      args:
        - name:
            long: name
            required: true
            help: "name of the Ingress"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-extensions-v1beta1-namespaced-ingress-status:
      about: "replace status of the specified Ingress"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Ingress) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Ingress"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-extensions-v1beta1-ingress-for-all-namespaces:
      about: "list or watch objects of kind Ingress"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-extensions-v1beta1-namespaced-ingress:
      about: "list or watch objects of kind Ingress"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true






  - create-extensions-v1beta1-namespaced-network-policy:
      about: "create a NetworkPolicy"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: NetworkPolicy) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-extensions-v1beta1-namespaced-network-policy:
      about: "read the specified NetworkPolicy"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the NetworkPolicy"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-extensions-v1beta1-namespaced-network-policy:
      about: "replace the specified NetworkPolicy"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: NetworkPolicy) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the NetworkPolicy"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true



  - list-extensions-v1beta1-namespaced-network-policy:
      about: "list or watch objects of kind NetworkPolicy"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-extensions-v1beta1-network-policy-for-all-namespaces:
      about: "list or watch objects of kind NetworkPolicy"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true




  - create-extensions-v1beta1-pod-security-policy:
      about: "create a PodSecurityPolicy"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PodSecurityPolicy) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-extensions-v1beta1-pod-security-policy:
      about: "read the specified PodSecurityPolicy"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodSecurityPolicy"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-extensions-v1beta1-pod-security-policy:
      about: "replace the specified PodSecurityPolicy"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PodSecurityPolicy) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodSecurityPolicy"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-extensions-v1beta1-pod-security-policy:
      about: "list or watch objects of kind PodSecurityPolicy"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - create-extensions-v1beta1-namespaced-replica-set:
      about: "create a ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ReplicaSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-extensions-v1beta1-namespaced-replica-set:
      about: "read the specified ReplicaSet"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-extensions-v1beta1-namespaced-replica-set:
      about: "replace the specified ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ReplicaSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-extensions-v1beta1-namespaced-replica-set-status:
      about: "read status of the specified ReplicaSet"
      args:
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-extensions-v1beta1-namespaced-replica-set-status:
      about: "replace status of the specified ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ReplicaSet) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-extensions-v1beta1-namespaced-replica-set:
      about: "list or watch objects of kind ReplicaSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-extensions-v1beta1-replica-set-for-all-namespaces:
      about: "list or watch objects of kind ReplicaSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true









  - read-extensions-v1beta1-namespaced-deployment-scale:
      about: "read scale of the specified Deployment"
      args:
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-extensions-v1beta1-namespaced-deployment-scale:
      about: "replace scale of the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Scale) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-extensions-v1beta1-namespaced-replica-set-scale:
      about: "read scale of the specified ReplicaSet"
      args:
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-extensions-v1beta1-namespaced-replica-set-scale:
      about: "replace scale of the specified ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Scale) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-extensions-v1beta1-namespaced-replication-controller-dummy-scale:
      about: "read scale of the specified ReplicationControllerDummy"
      args:
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-extensions-v1beta1-namespaced-replication-controller-dummy-scale:
      about: "replace scale of the specified ReplicationControllerDummy"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Scale) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true






  - create-networking-v1-namespaced-network-policy:
      about: "create a NetworkPolicy"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: NetworkPolicy) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-networking-v1-namespaced-network-policy:
      about: "read the specified NetworkPolicy"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the NetworkPolicy"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-networking-v1-namespaced-network-policy:
      about: "replace the specified NetworkPolicy"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: NetworkPolicy) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the NetworkPolicy"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true



  - list-networking-v1-namespaced-network-policy:
      about: "list or watch objects of kind NetworkPolicy"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-networking-v1-network-policy-for-all-namespaces:
      about: "list or watch objects of kind NetworkPolicy"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true






  - create-networking-v1beta1-namespaced-ingress:
      about: "create an Ingress"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Ingress) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-networking-v1beta1-namespaced-ingress:
      about: "read the specified Ingress"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Ingress"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-networking-v1beta1-namespaced-ingress:
      about: "replace the specified Ingress"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Ingress) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Ingress"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-networking-v1beta1-namespaced-ingress-status:
      about: "read status of the specified Ingress"
      args:
        - name:
            long: name
            required: true
            help: "name of the Ingress"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-networking-v1beta1-namespaced-ingress-status:
      about: "replace status of the specified Ingress"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Ingress) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Ingress"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-networking-v1beta1-ingress-for-all-namespaces:
      about: "list or watch objects of kind Ingress"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - list-networking-v1beta1-namespaced-ingress:
      about: "list or watch objects of kind Ingress"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true





  - create-node-v1alpha1-runtime-class:
      about: "create a RuntimeClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: RuntimeClass) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-node-v1alpha1-runtime-class:
      about: "read the specified RuntimeClass"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the RuntimeClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-node-v1alpha1-runtime-class:
      about: "replace the specified RuntimeClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: RuntimeClass) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the RuntimeClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-node-v1alpha1-runtime-class:
      about: "list or watch objects of kind RuntimeClass"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - create-node-v1beta1-runtime-class:
      about: "create a RuntimeClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: RuntimeClass) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-node-v1beta1-runtime-class:
      about: "read the specified RuntimeClass"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the RuntimeClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-node-v1beta1-runtime-class:
      about: "replace the specified RuntimeClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: RuntimeClass) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the RuntimeClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-node-v1beta1-runtime-class:
      about: "list or watch objects of kind RuntimeClass"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true




  - create-core-v1-namespaced-pod-eviction:
      about: "create eviction of a Pod"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Eviction) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Eviction"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true




  - create-policy-v1beta1-namespaced-pod-disruption-budget:
      about: "create a PodDisruptionBudget"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PodDisruptionBudget) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-policy-v1beta1-namespaced-pod-disruption-budget:
      about: "read the specified PodDisruptionBudget"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodDisruptionBudget"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-policy-v1beta1-namespaced-pod-disruption-budget:
      about: "replace the specified PodDisruptionBudget"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PodDisruptionBudget) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodDisruptionBudget"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-policy-v1beta1-namespaced-pod-disruption-budget-status:
      about: "read status of the specified PodDisruptionBudget"
      args:
        - name:
            long: name
            required: true
            help: "name of the PodDisruptionBudget"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-policy-v1beta1-namespaced-pod-disruption-budget-status:
      about: "replace status of the specified PodDisruptionBudget"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PodDisruptionBudget) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodDisruptionBudget"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-policy-v1beta1-namespaced-pod-disruption-budget:
      about: "list or watch objects of kind PodDisruptionBudget"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-policy-v1beta1-pod-disruption-budget-for-all-namespaces:
      about: "list or watch objects of kind PodDisruptionBudget"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true



  - create-policy-v1beta1-pod-security-policy:
      about: "create a PodSecurityPolicy"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PodSecurityPolicy) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-policy-v1beta1-pod-security-policy:
      about: "read the specified PodSecurityPolicy"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodSecurityPolicy"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-policy-v1beta1-pod-security-policy:
      about: "replace the specified PodSecurityPolicy"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PodSecurityPolicy) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodSecurityPolicy"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-policy-v1beta1-pod-security-policy:
      about: "list or watch objects of kind PodSecurityPolicy"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true








  - create-rbac-authorization-v1-cluster-role:
      about: "create a ClusterRole"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ClusterRole) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-rbac-authorization-v1-cluster-role:
      about: "read the specified ClusterRole"
      args:
        - name:
            long: name
            required: true
            help: "name of the ClusterRole"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-rbac-authorization-v1-cluster-role:
      about: "replace the specified ClusterRole"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ClusterRole) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRole"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - create-rbac-authorization-v1-cluster-role-binding:
      about: "create a ClusterRoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ClusterRoleBinding) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-rbac-authorization-v1-cluster-role-binding:
      about: "read the specified ClusterRoleBinding"
      args:
        - name:
            long: name
            required: true
            help: "name of the ClusterRoleBinding"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-rbac-authorization-v1-cluster-role-binding:
      about: "replace the specified ClusterRoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ClusterRoleBinding) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRoleBinding"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-rbac-authorization-v1-cluster-role-binding:
      about: "list or watch objects of kind ClusterRoleBinding"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-rbac-authorization-v1-cluster-role:
      about: "list or watch objects of kind ClusterRole"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - create-rbac-authorization-v1-namespaced-role:
      about: "create a Role"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Role) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-rbac-authorization-v1-namespaced-role:
      about: "read the specified Role"
      args:
        - name:
            long: name
            required: true
            help: "name of the Role"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-rbac-authorization-v1-namespaced-role:
      about: "replace the specified Role"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Role) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Role"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - create-rbac-authorization-v1-namespaced-role-binding:
      about: "create a RoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: RoleBinding) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-rbac-authorization-v1-namespaced-role-binding:
      about: "read the specified RoleBinding"
      args:
        - name:
            long: name
            required: true
            help: "name of the RoleBinding"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-rbac-authorization-v1-namespaced-role-binding:
      about: "replace the specified RoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: RoleBinding) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the RoleBinding"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-rbac-authorization-v1-namespaced-role-binding:
      about: "list or watch objects of kind RoleBinding"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-rbac-authorization-v1-role-binding-for-all-namespaces:
      about: "list or watch objects of kind RoleBinding"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true

  - list-rbac-authorization-v1-namespaced-role:
      about: "list or watch objects of kind Role"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-rbac-authorization-v1-role-for-all-namespaces:
      about: "list or watch objects of kind Role"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true




  - create-rbac-authorization-v1alpha1-cluster-role:
      about: "create a ClusterRole"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ClusterRole) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-rbac-authorization-v1alpha1-cluster-role:
      about: "read the specified ClusterRole"
      args:
        - name:
            long: name
            required: true
            help: "name of the ClusterRole"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-rbac-authorization-v1alpha1-cluster-role:
      about: "replace the specified ClusterRole"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ClusterRole) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRole"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - create-rbac-authorization-v1alpha1-cluster-role-binding:
      about: "create a ClusterRoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ClusterRoleBinding) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-rbac-authorization-v1alpha1-cluster-role-binding:
      about: "read the specified ClusterRoleBinding"
      args:
        - name:
            long: name
            required: true
            help: "name of the ClusterRoleBinding"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-rbac-authorization-v1alpha1-cluster-role-binding:
      about: "replace the specified ClusterRoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ClusterRoleBinding) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRoleBinding"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-rbac-authorization-v1alpha1-cluster-role-binding:
      about: "list or watch objects of kind ClusterRoleBinding"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-rbac-authorization-v1alpha1-cluster-role:
      about: "list or watch objects of kind ClusterRole"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - create-rbac-authorization-v1alpha1-namespaced-role:
      about: "create a Role"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Role) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-rbac-authorization-v1alpha1-namespaced-role:
      about: "read the specified Role"
      args:
        - name:
            long: name
            required: true
            help: "name of the Role"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-rbac-authorization-v1alpha1-namespaced-role:
      about: "replace the specified Role"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Role) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Role"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - create-rbac-authorization-v1alpha1-namespaced-role-binding:
      about: "create a RoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: RoleBinding) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-rbac-authorization-v1alpha1-namespaced-role-binding:
      about: "read the specified RoleBinding"
      args:
        - name:
            long: name
            required: true
            help: "name of the RoleBinding"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-rbac-authorization-v1alpha1-namespaced-role-binding:
      about: "replace the specified RoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: RoleBinding) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the RoleBinding"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-rbac-authorization-v1alpha1-namespaced-role-binding:
      about: "list or watch objects of kind RoleBinding"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-rbac-authorization-v1alpha1-role-binding-for-all-namespaces:
      about: "list or watch objects of kind RoleBinding"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true

  - list-rbac-authorization-v1alpha1-namespaced-role:
      about: "list or watch objects of kind Role"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-rbac-authorization-v1alpha1-role-for-all-namespaces:
      about: "list or watch objects of kind Role"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true




  - create-rbac-authorization-v1beta1-cluster-role:
      about: "create a ClusterRole"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ClusterRole) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-rbac-authorization-v1beta1-cluster-role:
      about: "read the specified ClusterRole"
      args:
        - name:
            long: name
            required: true
            help: "name of the ClusterRole"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-rbac-authorization-v1beta1-cluster-role:
      about: "replace the specified ClusterRole"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ClusterRole) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRole"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - create-rbac-authorization-v1beta1-cluster-role-binding:
      about: "create a ClusterRoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ClusterRoleBinding) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-rbac-authorization-v1beta1-cluster-role-binding:
      about: "read the specified ClusterRoleBinding"
      args:
        - name:
            long: name
            required: true
            help: "name of the ClusterRoleBinding"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-rbac-authorization-v1beta1-cluster-role-binding:
      about: "replace the specified ClusterRoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ClusterRoleBinding) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRoleBinding"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-rbac-authorization-v1beta1-cluster-role-binding:
      about: "list or watch objects of kind ClusterRoleBinding"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-rbac-authorization-v1beta1-cluster-role:
      about: "list or watch objects of kind ClusterRole"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - create-rbac-authorization-v1beta1-namespaced-role:
      about: "create a Role"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Role) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-rbac-authorization-v1beta1-namespaced-role:
      about: "read the specified Role"
      args:
        - name:
            long: name
            required: true
            help: "name of the Role"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-rbac-authorization-v1beta1-namespaced-role:
      about: "replace the specified Role"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Role) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Role"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - create-rbac-authorization-v1beta1-namespaced-role-binding:
      about: "create a RoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: RoleBinding) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-rbac-authorization-v1beta1-namespaced-role-binding:
      about: "read the specified RoleBinding"
      args:
        - name:
            long: name
            required: true
            help: "name of the RoleBinding"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-rbac-authorization-v1beta1-namespaced-role-binding:
      about: "replace the specified RoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: RoleBinding) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the RoleBinding"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-rbac-authorization-v1beta1-namespaced-role-binding:
      about: "list or watch objects of kind RoleBinding"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-rbac-authorization-v1beta1-role-binding-for-all-namespaces:
      about: "list or watch objects of kind RoleBinding"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true

  - list-rbac-authorization-v1beta1-namespaced-role:
      about: "list or watch objects of kind Role"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-rbac-authorization-v1beta1-role-for-all-namespaces:
      about: "list or watch objects of kind Role"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true



  - create-scheduling-v1-priority-class:
      about: "create a PriorityClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PriorityClass) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-scheduling-v1-priority-class:
      about: "read the specified PriorityClass"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PriorityClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-scheduling-v1-priority-class:
      about: "replace the specified PriorityClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PriorityClass) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PriorityClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-scheduling-v1-priority-class:
      about: "list or watch objects of kind PriorityClass"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - create-scheduling-v1alpha1-priority-class:
      about: "create a PriorityClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PriorityClass) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-scheduling-v1alpha1-priority-class:
      about: "read the specified PriorityClass"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PriorityClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-scheduling-v1alpha1-priority-class:
      about: "replace the specified PriorityClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PriorityClass) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PriorityClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-scheduling-v1alpha1-priority-class:
      about: "list or watch objects of kind PriorityClass"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - create-scheduling-v1beta1-priority-class:
      about: "create a PriorityClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PriorityClass) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-scheduling-v1beta1-priority-class:
      about: "read the specified PriorityClass"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PriorityClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-scheduling-v1beta1-priority-class:
      about: "replace the specified PriorityClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PriorityClass) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PriorityClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-scheduling-v1beta1-priority-class:
      about: "list or watch objects of kind PriorityClass"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - create-settings-v1alpha1-namespaced-pod-preset:
      about: "create a PodPreset"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PodPreset) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-settings-v1alpha1-namespaced-pod-preset:
      about: "read the specified PodPreset"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodPreset"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-settings-v1alpha1-namespaced-pod-preset:
      about: "replace the specified PodPreset"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: PodPreset) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodPreset"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-settings-v1alpha1-namespaced-pod-preset:
      about: "list or watch objects of kind PodPreset"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - list-settings-v1alpha1-pod-preset-for-all-namespaces:
      about: "list or watch objects of kind PodPreset"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true


  - create-storage-v1-storage-class:
      about: "create a StorageClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: StorageClass) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-storage-v1-storage-class:
      about: "read the specified StorageClass"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StorageClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-storage-v1-storage-class:
      about: "replace the specified StorageClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: StorageClass) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StorageClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-storage-v1-storage-class:
      about: "list or watch objects of kind StorageClass"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - create-storage-v1-volume-attachment:
      about: "create a VolumeAttachment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: VolumeAttachment) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-storage-v1-volume-attachment:
      about: "read the specified VolumeAttachment"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the VolumeAttachment"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-storage-v1-volume-attachment:
      about: "replace the specified VolumeAttachment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: VolumeAttachment) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the VolumeAttachment"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-storage-v1-volume-attachment-status:
      about: "read status of the specified VolumeAttachment"
      args:
        - name:
            long: name
            required: true
            help: "name of the VolumeAttachment"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-storage-v1-volume-attachment-status:
      about: "replace status of the specified VolumeAttachment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: VolumeAttachment) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the VolumeAttachment"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-storage-v1-volume-attachment:
      about: "list or watch objects of kind VolumeAttachment"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true





  - create-storage-v1alpha1-volume-attachment:
      about: "create a VolumeAttachment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: VolumeAttachment) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-storage-v1alpha1-volume-attachment:
      about: "read the specified VolumeAttachment"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the VolumeAttachment"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-storage-v1alpha1-volume-attachment:
      about: "replace the specified VolumeAttachment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: VolumeAttachment) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the VolumeAttachment"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-storage-v1alpha1-volume-attachment:
      about: "list or watch objects of kind VolumeAttachment"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true





  - create-storage-v1beta1-csi-driver:
      about: "create a CSIDriver"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: CsiDriver) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-storage-v1beta1-csi-driver:
      about: "read the specified CSIDriver"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CSIDriver"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-storage-v1beta1-csi-driver:
      about: "replace the specified CSIDriver"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: CsiDriver) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CSIDriver"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-storage-v1beta1-csi-driver:
      about: "list or watch objects of kind CSIDriver"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - create-storage-v1beta1-csi-node:
      about: "create a CSINode"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: CsiNode) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-storage-v1beta1-csi-node:
      about: "read the specified CSINode"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CSINode"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-storage-v1beta1-csi-node:
      about: "replace the specified CSINode"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: CsiNode) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CSINode"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-storage-v1beta1-csi-node:
      about: "list or watch objects of kind CSINode"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - create-storage-v1beta1-storage-class:
      about: "create a StorageClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: StorageClass) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-storage-v1beta1-storage-class:
      about: "read the specified StorageClass"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StorageClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-storage-v1beta1-storage-class:
      about: "replace the specified StorageClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: StorageClass) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StorageClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-storage-v1beta1-storage-class:
      about: "list or watch objects of kind StorageClass"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - create-storage-v1beta1-volume-attachment:
      about: "create a VolumeAttachment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: VolumeAttachment) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-storage-v1beta1-volume-attachment:
      about: "read the specified VolumeAttachment"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the VolumeAttachment"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-storage-v1beta1-volume-attachment:
      about: "replace the specified VolumeAttachment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: VolumeAttachment) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the VolumeAttachment"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true

  - list-storage-v1beta1-volume-attachment:
      about: "list or watch objects of kind VolumeAttachment"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true







  - create-apiextensions-v1beta1-custom-resource-definition:
      about: "create a CustomResourceDefinition"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: CustomResourceDefinition) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apiextensions-v1beta1-custom-resource-definition:
      about: "read the specified CustomResourceDefinition"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CustomResourceDefinition"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apiextensions-v1beta1-custom-resource-definition:
      about: "replace the specified CustomResourceDefinition"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: CustomResourceDefinition) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CustomResourceDefinition"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apiextensions-v1beta1-custom-resource-definition-status:
      about: "read status of the specified CustomResourceDefinition"
      args:
        - name:
            long: name
            required: true
            help: "name of the CustomResourceDefinition"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apiextensions-v1beta1-custom-resource-definition-status:
      about: "replace status of the specified CustomResourceDefinition"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: CustomResourceDefinition) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CustomResourceDefinition"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-apiextensions-v1beta1-custom-resource-definition:
      about: "list or watch objects of kind CustomResourceDefinition"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true













  - get-admissionregistration-api-group:
      about: "get information of a group"
  - get-apiextensions-api-group:
      about: "get information of a group"
  - get-apiregistration-api-group:
      about: "get information of a group"
  - get-apps-api-group:
      about: "get information of a group"
  - get-auditregistration-api-group:
      about: "get information of a group"
  - get-authentication-api-group:
      about: "get information of a group"
  - get-authorization-api-group:
      about: "get information of a group"
  - get-autoscaling-api-group:
      about: "get information of a group"
  - get-batch-api-group:
      about: "get information of a group"
  - get-certificates-api-group:
      about: "get information of a group"
  - get-coordination-api-group:
      about: "get information of a group"
  - get-events-api-group:
      about: "get information of a group"
  - get-extensions-api-group:
      about: "get information of a group"
  - get-networking-api-group:
      about: "get information of a group"
  - get-node-api-group:
      about: "get information of a group"
  - get-policy-api-group:
      about: "get information of a group"
  - get-rbac-authorization-api-group:
      about: "get information of a group"
  - get-scheduling-api-group:
      about: "get information of a group"
  - get-settings-api-group:
      about: "get information of a group"
  - get-storage-api-group:
      about: "get information of a group"

  - get-api-versions:
      about: "get available API versions"


  - get-core-v1api-resources:
      about: "get available resources"
  - get-admissionregistration-v1beta1-api-resources:
      about: "get available resources"
  - get-apiextensions-v1beta1-api-resources:
      about: "get available resources"
  - get-apiregistration-v1api-resources:
      about: "get available resources"
  - get-apiregistration-v1beta1-api-resources:
      about: "get available resources"
  - get-apps-v1api-resources:
      about: "get available resources"
  - get-apps-v1beta1-api-resources:
      about: "get available resources"
  - get-apps-v1beta2-api-resources:
      about: "get available resources"
  - get-auditregistration-v1alpha1-api-resources:
      about: "get available resources"
  - get-authentication-v1api-resources:
      about: "get available resources"
  - get-authentication-v1beta1-api-resources:
      about: "get available resources"
  - get-authorization-v1api-resources:
      about: "get available resources"
  - get-authorization-v1beta1-api-resources:
      about: "get available resources"
  - get-autoscaling-v1api-resources:
      about: "get available resources"
  - get-autoscaling-v2beta1-api-resources:
      about: "get available resources"
  - get-autoscaling-v2beta2-api-resources:
      about: "get available resources"
  - get-batch-v1api-resources:
      about: "get available resources"
  - get-batch-v1beta1-api-resources:
      about: "get available resources"
  - get-batch-v2alpha1-api-resources:
      about: "get available resources"
  - get-certificates-v1beta1-api-resources:
      about: "get available resources"
  - get-coordination-v1api-resources:
      about: "get available resources"
  - get-coordination-v1beta1-api-resources:
      about: "get available resources"
  - get-events-v1beta1-api-resources:
      about: "get available resources"
  - get-extensions-v1beta1-api-resources:
      about: "get available resources"
  - get-networking-v1api-resources:
      about: "get available resources"
  - get-networking-v1beta1-api-resources:
      about: "get available resources"
  - get-node-v1alpha1-api-resources:
      about: "get available resources"
  - get-node-v1beta1-api-resources:
      about: "get available resources"
  - get-policy-v1beta1-api-resources:
      about: "get available resources"
  - get-rbac-authorization-v1api-resources:
      about: "get available resources"
  - get-rbac-authorization-v1alpha1-api-resources:
      about: "get available resources"
  - get-rbac-authorization-v1beta1-api-resources:
      about: "get available resources"
  - get-scheduling-v1api-resources:
      about: "get available resources"
  - get-scheduling-v1alpha1-api-resources:
      about: "get available resources"
  - get-scheduling-v1beta1-api-resources:
      about: "get available resources"
  - get-settings-v1alpha1-api-resources:
      about: "get available resources"
  - get-storage-v1api-resources:
      about: "get available resources"
  - get-storage-v1alpha1-api-resources:
      about: "get available resources"
  - get-storage-v1beta1-api-resources:
      about: "get available resources"

  - get-core-api-versions:
      about: "get available API versions"

  - delete-core-v1-namespaced-config-map:
      about: "delete a ConfigMap"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ConfigMap"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-namespaced-endpoints:
      about: "delete Endpoints"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Endpoints"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-namespaced-event:
      about: "delete an Event"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Event"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-namespaced-limit-range:
      about: "delete a LimitRange"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the LimitRange"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-namespaced-persistent-volume-claim:
      about: "delete a PersistentVolumeClaim"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PersistentVolumeClaim"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-namespaced-pod:
      about: "delete a Pod"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Pod"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-namespaced-pod-template:
      about: "delete a PodTemplate"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodTemplate"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-namespaced-replication-controller:
      about: "delete a ReplicationController"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicationController"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-namespaced-resource-quota:
      about: "delete a ResourceQuota"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ResourceQuota"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-namespaced-secret:
      about: "delete a Secret"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Secret"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-namespaced-service-account:
      about: "delete a ServiceAccount"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ServiceAccount"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-namespaced-service:
      about: "delete a Service"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Service"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-namespace:
      about: "delete a Namespace"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Namespace"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-node:
      about: "delete a Node"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Node"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-persistent-volume:
      about: "delete a PersistentVolume"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PersistentVolume"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-admissionregistration-v1beta1-mutating-webhook-configuration:
      about: "delete a MutatingWebhookConfiguration"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the MutatingWebhookConfiguration"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-admissionregistration-v1beta1-validating-webhook-configuration:
      about: "delete a ValidatingWebhookConfiguration"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ValidatingWebhookConfiguration"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apiextensions-v1beta1-custom-resource-definition:
      about: "delete a CustomResourceDefinition"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CustomResourceDefinition"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apiregistration-v1api-service:
      about: "delete an APIService"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the APIService"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apiregistration-v1beta1-api-service:
      about: "delete an APIService"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the APIService"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1-namespaced-controller-revision:
      about: "delete a ControllerRevision"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ControllerRevision"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1-namespaced-daemon-set:
      about: "delete a DaemonSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1-namespaced-deployment:
      about: "delete a Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1-namespaced-replica-set:
      about: "delete a ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1-namespaced-stateful-set:
      about: "delete a StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1beta1-namespaced-controller-revision:
      about: "delete a ControllerRevision"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ControllerRevision"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1beta1-namespaced-deployment:
      about: "delete a Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1beta1-namespaced-stateful-set:
      about: "delete a StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1beta2-namespaced-controller-revision:
      about: "delete a ControllerRevision"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ControllerRevision"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1beta2-namespaced-daemon-set:
      about: "delete a DaemonSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1beta2-namespaced-deployment:
      about: "delete a Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1beta2-namespaced-replica-set:
      about: "delete a ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1beta2-namespaced-stateful-set:
      about: "delete a StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-auditregistration-v1alpha1-audit-sink:
      about: "delete an AuditSink"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the AuditSink"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-autoscaling-v1-namespaced-horizontal-pod-autoscaler:
      about: "delete a HorizontalPodAutoscaler"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-autoscaling-v2beta1-namespaced-horizontal-pod-autoscaler:
      about: "delete a HorizontalPodAutoscaler"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-autoscaling-v2beta2-namespaced-horizontal-pod-autoscaler:
      about: "delete a HorizontalPodAutoscaler"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-batch-v1-namespaced-job:
      about: "delete a Job"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Job"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-batch-v1beta1-namespaced-cron-job:
      about: "delete a CronJob"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CronJob"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-batch-v2alpha1-namespaced-cron-job:
      about: "delete a CronJob"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CronJob"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-certificates-v1beta1-certificate-signing-request:
      about: "delete a CertificateSigningRequest"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CertificateSigningRequest"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-coordination-v1-namespaced-lease:
      about: "delete a Lease"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Lease"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-coordination-v1beta1-namespaced-lease:
      about: "delete a Lease"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Lease"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-events-v1beta1-namespaced-event:
      about: "delete an Event"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Event"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-extensions-v1beta1-namespaced-daemon-set:
      about: "delete a DaemonSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-extensions-v1beta1-namespaced-deployment:
      about: "delete a Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-extensions-v1beta1-namespaced-ingress:
      about: "delete an Ingress"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Ingress"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-extensions-v1beta1-namespaced-network-policy:
      about: "delete a NetworkPolicy"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the NetworkPolicy"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-extensions-v1beta1-namespaced-replica-set:
      about: "delete a ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-extensions-v1beta1-pod-security-policy:
      about: "delete a PodSecurityPolicy"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodSecurityPolicy"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-networking-v1-namespaced-network-policy:
      about: "delete a NetworkPolicy"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the NetworkPolicy"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-networking-v1beta1-namespaced-ingress:
      about: "delete an Ingress"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Ingress"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-node-v1alpha1-runtime-class:
      about: "delete a RuntimeClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the RuntimeClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-node-v1beta1-runtime-class:
      about: "delete a RuntimeClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the RuntimeClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-policy-v1beta1-namespaced-pod-disruption-budget:
      about: "delete a PodDisruptionBudget"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodDisruptionBudget"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-policy-v1beta1-pod-security-policy:
      about: "delete a PodSecurityPolicy"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodSecurityPolicy"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1-cluster-role-binding:
      about: "delete a ClusterRoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRoleBinding"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1-cluster-role:
      about: "delete a ClusterRole"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRole"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1-namespaced-role-binding:
      about: "delete a RoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the RoleBinding"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1-namespaced-role:
      about: "delete a Role"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Role"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1alpha1-cluster-role-binding:
      about: "delete a ClusterRoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRoleBinding"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1alpha1-cluster-role:
      about: "delete a ClusterRole"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRole"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1alpha1-namespaced-role-binding:
      about: "delete a RoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the RoleBinding"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1alpha1-namespaced-role:
      about: "delete a Role"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Role"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1beta1-cluster-role-binding:
      about: "delete a ClusterRoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRoleBinding"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1beta1-cluster-role:
      about: "delete a ClusterRole"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRole"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1beta1-namespaced-role-binding:
      about: "delete a RoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the RoleBinding"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1beta1-namespaced-role:
      about: "delete a Role"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Role"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-scheduling-v1-priority-class:
      about: "delete a PriorityClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PriorityClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-scheduling-v1alpha1-priority-class:
      about: "delete a PriorityClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PriorityClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-scheduling-v1beta1-priority-class:
      about: "delete a PriorityClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PriorityClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-settings-v1alpha1-namespaced-pod-preset:
      about: "delete a PodPreset"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodPreset"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-storage-v1-storage-class:
      about: "delete a StorageClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StorageClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-storage-v1-volume-attachment:
      about: "delete a VolumeAttachment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the VolumeAttachment"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-storage-v1alpha1-volume-attachment:
      about: "delete a VolumeAttachment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the VolumeAttachment"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-storage-v1beta1-csi-driver:
      about: "delete a CSIDriver"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CSIDriver"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-storage-v1beta1-csi-node:
      about: "delete a CSINode"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CSINode"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-storage-v1beta1-storage-class:
      about: "delete a StorageClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StorageClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-storage-v1beta1-volume-attachment:
      about: "delete a VolumeAttachment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: DeleteOptions) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - grace-period-seconds:
            long: grace-period-seconds
            help: "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately."
            takes_value: true
        - orphan-dependents:
            long: orphan-dependents
            help: "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both."
            takes_value: true
        - propagation-policy:
            long: propagation-policy
            help: "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy. Acceptable values are: 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the dependents in the background; 'Foreground' - a cascading policy that deletes all dependents in the foreground."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the VolumeAttachment"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true











  - patch-core-v1-namespaced-endpoints:
      about: "partially update the specified Endpoints"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Endpoints"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-core-v1-namespaced-event:
      about: "partially update the specified Event"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Event"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-core-v1-namespaced-limit-range:
      about: "partially update the specified LimitRange"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the LimitRange"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-core-v1-namespaced-persistent-volume-claim:
      about: "partially update the specified PersistentVolumeClaim"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PersistentVolumeClaim"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-core-v1-namespaced-persistent-volume-claim-status:
      about: "partially update status of the specified PersistentVolumeClaim"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PersistentVolumeClaim"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-core-v1-namespaced-pod:
      about: "partially update the specified Pod"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Pod"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-core-v1-namespaced-pod-status:
      about: "partially update status of the specified Pod"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Pod"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-core-v1-namespaced-pod-template:
      about: "partially update the specified PodTemplate"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodTemplate"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-core-v1-namespaced-replication-controller:
      about: "partially update the specified ReplicationController"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicationController"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-core-v1-namespaced-replication-controller-scale:
      about: "partially update scale of the specified ReplicationController"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-core-v1-namespaced-replication-controller-status:
      about: "partially update status of the specified ReplicationController"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicationController"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-core-v1-namespaced-resource-quota:
      about: "partially update the specified ResourceQuota"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ResourceQuota"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-core-v1-namespaced-resource-quota-status:
      about: "partially update status of the specified ResourceQuota"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ResourceQuota"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-core-v1-namespaced-secret:
      about: "partially update the specified Secret"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Secret"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-core-v1-namespaced-service-account:
      about: "partially update the specified ServiceAccount"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ServiceAccount"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-core-v1-namespaced-service:
      about: "partially update the specified Service"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Service"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-core-v1-namespaced-service-status:
      about: "partially update status of the specified Service"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Service"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-core-v1-namespace:
      about: "partially update the specified Namespace"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Namespace"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-core-v1-namespace-status:
      about: "partially update status of the specified Namespace"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Namespace"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-core-v1-node:
      about: "partially update the specified Node"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Node"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-core-v1-node-status:
      about: "partially update status of the specified Node"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Node"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-core-v1-persistent-volume:
      about: "partially update the specified PersistentVolume"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PersistentVolume"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-core-v1-persistent-volume-status:
      about: "partially update status of the specified PersistentVolume"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PersistentVolume"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-admissionregistration-v1beta1-mutating-webhook-configuration:
      about: "partially update the specified MutatingWebhookConfiguration"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the MutatingWebhookConfiguration"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-admissionregistration-v1beta1-validating-webhook-configuration:
      about: "partially update the specified ValidatingWebhookConfiguration"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ValidatingWebhookConfiguration"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apiextensions-v1beta1-custom-resource-definition:
      about: "partially update the specified CustomResourceDefinition"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CustomResourceDefinition"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apiextensions-v1beta1-custom-resource-definition-status:
      about: "partially update status of the specified CustomResourceDefinition"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CustomResourceDefinition"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apiregistration-v1api-service:
      about: "partially update the specified APIService"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the APIService"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apiregistration-v1api-service-status:
      about: "partially update status of the specified APIService"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the APIService"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apiregistration-v1beta1-api-service:
      about: "partially update the specified APIService"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the APIService"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apiregistration-v1beta1-api-service-status:
      about: "partially update status of the specified APIService"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the APIService"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1-namespaced-controller-revision:
      about: "partially update the specified ControllerRevision"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ControllerRevision"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1-namespaced-daemon-set:
      about: "partially update the specified DaemonSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1-namespaced-daemon-set-status:
      about: "partially update status of the specified DaemonSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1-namespaced-deployment:
      about: "partially update the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1-namespaced-deployment-scale:
      about: "partially update scale of the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1-namespaced-deployment-status:
      about: "partially update status of the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1-namespaced-replica-set:
      about: "partially update the specified ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1-namespaced-replica-set-scale:
      about: "partially update scale of the specified ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1-namespaced-replica-set-status:
      about: "partially update status of the specified ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1-namespaced-stateful-set:
      about: "partially update the specified StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1-namespaced-stateful-set-scale:
      about: "partially update scale of the specified StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1-namespaced-stateful-set-status:
      about: "partially update status of the specified StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1beta1-namespaced-controller-revision:
      about: "partially update the specified ControllerRevision"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ControllerRevision"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1beta1-namespaced-deployment:
      about: "partially update the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1beta1-namespaced-deployment-scale:
      about: "partially update scale of the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1beta1-namespaced-deployment-status:
      about: "partially update status of the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1beta1-namespaced-stateful-set:
      about: "partially update the specified StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1beta1-namespaced-stateful-set-scale:
      about: "partially update scale of the specified StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1beta1-namespaced-stateful-set-status:
      about: "partially update status of the specified StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1beta2-namespaced-controller-revision:
      about: "partially update the specified ControllerRevision"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ControllerRevision"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1beta2-namespaced-daemon-set:
      about: "partially update the specified DaemonSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1beta2-namespaced-daemon-set-status:
      about: "partially update status of the specified DaemonSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1beta2-namespaced-deployment:
      about: "partially update the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1beta2-namespaced-deployment-scale:
      about: "partially update scale of the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1beta2-namespaced-deployment-status:
      about: "partially update status of the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1beta2-namespaced-replica-set:
      about: "partially update the specified ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1beta2-namespaced-replica-set-scale:
      about: "partially update scale of the specified ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1beta2-namespaced-replica-set-status:
      about: "partially update status of the specified ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1beta2-namespaced-stateful-set:
      about: "partially update the specified StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1beta2-namespaced-stateful-set-scale:
      about: "partially update scale of the specified StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-apps-v1beta2-namespaced-stateful-set-status:
      about: "partially update status of the specified StatefulSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-auditregistration-v1alpha1-audit-sink:
      about: "partially update the specified AuditSink"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the AuditSink"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-autoscaling-v1-namespaced-horizontal-pod-autoscaler:
      about: "partially update the specified HorizontalPodAutoscaler"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-autoscaling-v1-namespaced-horizontal-pod-autoscaler-status:
      about: "partially update status of the specified HorizontalPodAutoscaler"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-autoscaling-v2beta1-namespaced-horizontal-pod-autoscaler:
      about: "partially update the specified HorizontalPodAutoscaler"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-autoscaling-v2beta1-namespaced-horizontal-pod-autoscaler-status:
      about: "partially update status of the specified HorizontalPodAutoscaler"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-autoscaling-v2beta2-namespaced-horizontal-pod-autoscaler:
      about: "partially update the specified HorizontalPodAutoscaler"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-autoscaling-v2beta2-namespaced-horizontal-pod-autoscaler-status:
      about: "partially update status of the specified HorizontalPodAutoscaler"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-batch-v1-namespaced-job:
      about: "partially update the specified Job"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Job"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-batch-v1-namespaced-job-status:
      about: "partially update status of the specified Job"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Job"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-batch-v1beta1-namespaced-cron-job:
      about: "partially update the specified CronJob"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CronJob"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-batch-v1beta1-namespaced-cron-job-status:
      about: "partially update status of the specified CronJob"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CronJob"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-batch-v2alpha1-namespaced-cron-job:
      about: "partially update the specified CronJob"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CronJob"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-batch-v2alpha1-namespaced-cron-job-status:
      about: "partially update status of the specified CronJob"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CronJob"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-certificates-v1beta1-certificate-signing-request:
      about: "partially update the specified CertificateSigningRequest"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CertificateSigningRequest"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-certificates-v1beta1-certificate-signing-request-status:
      about: "partially update status of the specified CertificateSigningRequest"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CertificateSigningRequest"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-coordination-v1-namespaced-lease:
      about: "partially update the specified Lease"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Lease"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-coordination-v1beta1-namespaced-lease:
      about: "partially update the specified Lease"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Lease"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-events-v1beta1-namespaced-event:
      about: "partially update the specified Event"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Event"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-extensions-v1beta1-namespaced-daemon-set:
      about: "partially update the specified DaemonSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-extensions-v1beta1-namespaced-daemon-set-status:
      about: "partially update status of the specified DaemonSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-extensions-v1beta1-namespaced-deployment:
      about: "partially update the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-extensions-v1beta1-namespaced-deployment-scale:
      about: "partially update scale of the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-extensions-v1beta1-namespaced-deployment-status:
      about: "partially update status of the specified Deployment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-extensions-v1beta1-namespaced-ingress:
      about: "partially update the specified Ingress"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Ingress"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-extensions-v1beta1-namespaced-ingress-status:
      about: "partially update status of the specified Ingress"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Ingress"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-extensions-v1beta1-namespaced-network-policy:
      about: "partially update the specified NetworkPolicy"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the NetworkPolicy"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-extensions-v1beta1-namespaced-replica-set:
      about: "partially update the specified ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-extensions-v1beta1-namespaced-replica-set-scale:
      about: "partially update scale of the specified ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-extensions-v1beta1-namespaced-replica-set-status:
      about: "partially update status of the specified ReplicaSet"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-extensions-v1beta1-namespaced-replication-controller-dummy-scale:
      about: "partially update scale of the specified ReplicationControllerDummy"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Scale"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-extensions-v1beta1-pod-security-policy:
      about: "partially update the specified PodSecurityPolicy"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodSecurityPolicy"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-networking-v1-namespaced-network-policy:
      about: "partially update the specified NetworkPolicy"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the NetworkPolicy"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-networking-v1beta1-namespaced-ingress:
      about: "partially update the specified Ingress"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Ingress"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-networking-v1beta1-namespaced-ingress-status:
      about: "partially update status of the specified Ingress"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Ingress"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-node-v1alpha1-runtime-class:
      about: "partially update the specified RuntimeClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the RuntimeClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-node-v1beta1-runtime-class:
      about: "partially update the specified RuntimeClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the RuntimeClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-policy-v1beta1-namespaced-pod-disruption-budget:
      about: "partially update the specified PodDisruptionBudget"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodDisruptionBudget"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-policy-v1beta1-namespaced-pod-disruption-budget-status:
      about: "partially update status of the specified PodDisruptionBudget"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodDisruptionBudget"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-policy-v1beta1-pod-security-policy:
      about: "partially update the specified PodSecurityPolicy"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodSecurityPolicy"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-rbac-authorization-v1-cluster-role-binding:
      about: "partially update the specified ClusterRoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRoleBinding"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-rbac-authorization-v1-cluster-role:
      about: "partially update the specified ClusterRole"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRole"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-rbac-authorization-v1-namespaced-role-binding:
      about: "partially update the specified RoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the RoleBinding"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-rbac-authorization-v1-namespaced-role:
      about: "partially update the specified Role"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Role"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-rbac-authorization-v1alpha1-cluster-role-binding:
      about: "partially update the specified ClusterRoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRoleBinding"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-rbac-authorization-v1alpha1-cluster-role:
      about: "partially update the specified ClusterRole"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRole"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-rbac-authorization-v1alpha1-namespaced-role-binding:
      about: "partially update the specified RoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the RoleBinding"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-rbac-authorization-v1alpha1-namespaced-role:
      about: "partially update the specified Role"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Role"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-rbac-authorization-v1beta1-cluster-role-binding:
      about: "partially update the specified ClusterRoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRoleBinding"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-rbac-authorization-v1beta1-cluster-role:
      about: "partially update the specified ClusterRole"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRole"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-rbac-authorization-v1beta1-namespaced-role-binding:
      about: "partially update the specified RoleBinding"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the RoleBinding"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-rbac-authorization-v1beta1-namespaced-role:
      about: "partially update the specified Role"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Role"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-scheduling-v1-priority-class:
      about: "partially update the specified PriorityClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PriorityClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-scheduling-v1alpha1-priority-class:
      about: "partially update the specified PriorityClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PriorityClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-scheduling-v1beta1-priority-class:
      about: "partially update the specified PriorityClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PriorityClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-settings-v1alpha1-namespaced-pod-preset:
      about: "partially update the specified PodPreset"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodPreset"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-storage-v1-storage-class:
      about: "partially update the specified StorageClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StorageClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-storage-v1-volume-attachment:
      about: "partially update the specified VolumeAttachment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the VolumeAttachment"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-storage-v1-volume-attachment-status:
      about: "partially update status of the specified VolumeAttachment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the VolumeAttachment"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-storage-v1alpha1-volume-attachment:
      about: "partially update the specified VolumeAttachment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the VolumeAttachment"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-storage-v1beta1-csi-driver:
      about: "partially update the specified CSIDriver"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CSIDriver"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-storage-v1beta1-csi-node:
      about: "partially update the specified CSINode"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CSINode"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-storage-v1beta1-storage-class:
      about: "partially update the specified StorageClass"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StorageClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - patch-storage-v1beta1-volume-attachment:
      about: "partially update the specified VolumeAttachment"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: Patch) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint. This field is required for apply requests (application/apply-patch) but optional for non-apply patch types (JsonPatch, MergePatch, StrategicMergePatch)."
            takes_value: true
        - force:
            long: force
            help: "Force is going to \"force\" Apply requests. It means user will re-acquire conflicting fields owned by other people. Force flag must be unset for non-apply patch requests."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the VolumeAttachment"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true



  - delete-core-v1-collection-namespaced-config-map:
      about: "delete collection of ConfigMap"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-collection-namespaced-endpoints:
      about: "delete collection of Endpoints"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-collection-namespaced-event:
      about: "delete collection of Event"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-collection-namespaced-limit-range:
      about: "delete collection of LimitRange"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-collection-namespaced-persistent-volume-claim:
      about: "delete collection of PersistentVolumeClaim"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-collection-namespaced-pod:
      about: "delete collection of Pod"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-collection-namespaced-pod-template:
      about: "delete collection of PodTemplate"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-collection-namespaced-replication-controller:
      about: "delete collection of ReplicationController"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-collection-namespaced-resource-quota:
      about: "delete collection of ResourceQuota"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-collection-namespaced-secret:
      about: "delete collection of Secret"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-collection-namespaced-service-account:
      about: "delete collection of ServiceAccount"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-collection-node:
      about: "delete collection of Node"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-core-v1-collection-persistent-volume:
      about: "delete collection of PersistentVolume"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-admissionregistration-v1beta1-collection-mutating-webhook-configuration:
      about: "delete collection of MutatingWebhookConfiguration"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-admissionregistration-v1beta1-collection-validating-webhook-configuration:
      about: "delete collection of ValidatingWebhookConfiguration"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apiextensions-v1beta1-collection-custom-resource-definition:
      about: "delete collection of CustomResourceDefinition"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apiregistration-v1-collection-api-service:
      about: "delete collection of APIService"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apiregistration-v1beta1-collection-api-service:
      about: "delete collection of APIService"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1-collection-namespaced-controller-revision:
      about: "delete collection of ControllerRevision"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1-collection-namespaced-daemon-set:
      about: "delete collection of DaemonSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1-collection-namespaced-deployment:
      about: "delete collection of Deployment"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1-collection-namespaced-replica-set:
      about: "delete collection of ReplicaSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1-collection-namespaced-stateful-set:
      about: "delete collection of StatefulSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1beta1-collection-namespaced-controller-revision:
      about: "delete collection of ControllerRevision"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1beta1-collection-namespaced-deployment:
      about: "delete collection of Deployment"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1beta1-collection-namespaced-stateful-set:
      about: "delete collection of StatefulSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1beta2-collection-namespaced-controller-revision:
      about: "delete collection of ControllerRevision"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1beta2-collection-namespaced-daemon-set:
      about: "delete collection of DaemonSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1beta2-collection-namespaced-deployment:
      about: "delete collection of Deployment"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1beta2-collection-namespaced-replica-set:
      about: "delete collection of ReplicaSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-apps-v1beta2-collection-namespaced-stateful-set:
      about: "delete collection of StatefulSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-auditregistration-v1alpha1-collection-audit-sink:
      about: "delete collection of AuditSink"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-autoscaling-v1-collection-namespaced-horizontal-pod-autoscaler:
      about: "delete collection of HorizontalPodAutoscaler"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-autoscaling-v2beta1-collection-namespaced-horizontal-pod-autoscaler:
      about: "delete collection of HorizontalPodAutoscaler"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-autoscaling-v2beta2-collection-namespaced-horizontal-pod-autoscaler:
      about: "delete collection of HorizontalPodAutoscaler"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-batch-v1-collection-namespaced-job:
      about: "delete collection of Job"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-batch-v1beta1-collection-namespaced-cron-job:
      about: "delete collection of CronJob"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-batch-v2alpha1-collection-namespaced-cron-job:
      about: "delete collection of CronJob"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-certificates-v1beta1-collection-certificate-signing-request:
      about: "delete collection of CertificateSigningRequest"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-coordination-v1-collection-namespaced-lease:
      about: "delete collection of Lease"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-coordination-v1beta1-collection-namespaced-lease:
      about: "delete collection of Lease"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-events-v1beta1-collection-namespaced-event:
      about: "delete collection of Event"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-extensions-v1beta1-collection-namespaced-daemon-set:
      about: "delete collection of DaemonSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-extensions-v1beta1-collection-namespaced-deployment:
      about: "delete collection of Deployment"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-extensions-v1beta1-collection-namespaced-ingress:
      about: "delete collection of Ingress"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-extensions-v1beta1-collection-namespaced-network-policy:
      about: "delete collection of NetworkPolicy"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-extensions-v1beta1-collection-namespaced-replica-set:
      about: "delete collection of ReplicaSet"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-extensions-v1beta1-collection-pod-security-policy:
      about: "delete collection of PodSecurityPolicy"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-networking-v1-collection-namespaced-network-policy:
      about: "delete collection of NetworkPolicy"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-networking-v1beta1-collection-namespaced-ingress:
      about: "delete collection of Ingress"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-node-v1alpha1-collection-runtime-class:
      about: "delete collection of RuntimeClass"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-node-v1beta1-collection-runtime-class:
      about: "delete collection of RuntimeClass"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-policy-v1beta1-collection-namespaced-pod-disruption-budget:
      about: "delete collection of PodDisruptionBudget"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-policy-v1beta1-collection-pod-security-policy:
      about: "delete collection of PodSecurityPolicy"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1-collection-cluster-role-binding:
      about: "delete collection of ClusterRoleBinding"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1-collection-cluster-role:
      about: "delete collection of ClusterRole"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1-collection-namespaced-role-binding:
      about: "delete collection of RoleBinding"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1-collection-namespaced-role:
      about: "delete collection of Role"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1alpha1-collection-cluster-role-binding:
      about: "delete collection of ClusterRoleBinding"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1alpha1-collection-cluster-role:
      about: "delete collection of ClusterRole"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1alpha1-collection-namespaced-role-binding:
      about: "delete collection of RoleBinding"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1alpha1-collection-namespaced-role:
      about: "delete collection of Role"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1beta1-collection-cluster-role-binding:
      about: "delete collection of ClusterRoleBinding"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1beta1-collection-cluster-role:
      about: "delete collection of ClusterRole"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1beta1-collection-namespaced-role-binding:
      about: "delete collection of RoleBinding"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-rbac-authorization-v1beta1-collection-namespaced-role:
      about: "delete collection of Role"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-scheduling-v1-collection-priority-class:
      about: "delete collection of PriorityClass"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-scheduling-v1alpha1-collection-priority-class:
      about: "delete collection of PriorityClass"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-scheduling-v1beta1-collection-priority-class:
      about: "delete collection of PriorityClass"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-settings-v1alpha1-collection-namespaced-pod-preset:
      about: "delete collection of PodPreset"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-storage-v1-collection-storage-class:
      about: "delete collection of StorageClass"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-storage-v1-collection-volume-attachment:
      about: "delete collection of VolumeAttachment"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-storage-v1alpha1-collection-volume-attachment:
      about: "delete collection of VolumeAttachment"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-storage-v1beta1-collection-csi-driver:
      about: "delete collection of CSIDriver"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-storage-v1beta1-collection-csi-node:
      about: "delete collection of CSINode"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-storage-v1beta1-collection-storage-class:
      about: "delete collection of StorageClass"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - delete-storage-v1beta1-collection-volume-attachment:
      about: "delete collection of VolumeAttachment"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true



  - watch-core-v1-config-map-list-for-all-namespaces:
      about: "watch individual changes to a list of ConfigMap. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-endpoints-list-for-all-namespaces:
      about: "watch individual changes to a list of Endpoints. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-event-list-for-all-namespaces:
      about: "watch individual changes to a list of Event. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-limit-range-list-for-all-namespaces:
      about: "watch individual changes to a list of LimitRange. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespace-list:
      about: "watch individual changes to a list of Namespace. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-config-map-list:
      about: "watch individual changes to a list of ConfigMap. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-config-map:
      about: "watch changes to an object of kind ConfigMap. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ConfigMap"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-endpoints-list:
      about: "watch individual changes to a list of Endpoints. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-endpoints:
      about: "watch changes to an object of kind Endpoints. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Endpoints"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-event-list:
      about: "watch individual changes to a list of Event. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-event:
      about: "watch changes to an object of kind Event. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Event"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-limit-range-list:
      about: "watch individual changes to a list of LimitRange. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-limit-range:
      about: "watch changes to an object of kind LimitRange. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the LimitRange"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-persistent-volume-claim-list:
      about: "watch individual changes to a list of PersistentVolumeClaim. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-persistent-volume-claim:
      about: "watch changes to an object of kind PersistentVolumeClaim. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PersistentVolumeClaim"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-pod-list:
      about: "watch individual changes to a list of Pod. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-pod:
      about: "watch changes to an object of kind Pod. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Pod"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-pod-template-list:
      about: "watch individual changes to a list of PodTemplate. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-pod-template:
      about: "watch changes to an object of kind PodTemplate. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodTemplate"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-replication-controller-list:
      about: "watch individual changes to a list of ReplicationController. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-replication-controller:
      about: "watch changes to an object of kind ReplicationController. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicationController"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-resource-quota-list:
      about: "watch individual changes to a list of ResourceQuota. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-resource-quota:
      about: "watch changes to an object of kind ResourceQuota. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ResourceQuota"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-secret-list:
      about: "watch individual changes to a list of Secret. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-secret:
      about: "watch changes to an object of kind Secret. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Secret"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-service-account-list:
      about: "watch individual changes to a list of ServiceAccount. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-service-account:
      about: "watch changes to an object of kind ServiceAccount. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ServiceAccount"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-service-list:
      about: "watch individual changes to a list of Service. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespaced-service:
      about: "watch changes to an object of kind Service. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Service"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-namespace:
      about: "watch changes to an object of kind Namespace. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Namespace"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-node-list:
      about: "watch individual changes to a list of Node. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-node:
      about: "watch changes to an object of kind Node. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Node"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-persistent-volume-claim-list-for-all-namespaces:
      about: "watch individual changes to a list of PersistentVolumeClaim. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-persistent-volume-list:
      about: "watch individual changes to a list of PersistentVolume. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-persistent-volume:
      about: "watch changes to an object of kind PersistentVolume. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PersistentVolume"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-pod-list-for-all-namespaces:
      about: "watch individual changes to a list of Pod. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-pod-template-list-for-all-namespaces:
      about: "watch individual changes to a list of PodTemplate. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-replication-controller-list-for-all-namespaces:
      about: "watch individual changes to a list of ReplicationController. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-resource-quota-list-for-all-namespaces:
      about: "watch individual changes to a list of ResourceQuota. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-secret-list-for-all-namespaces:
      about: "watch individual changes to a list of Secret. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-service-account-list-for-all-namespaces:
      about: "watch individual changes to a list of ServiceAccount. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-core-v1-service-list-for-all-namespaces:
      about: "watch individual changes to a list of Service. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-admissionregistration-v1beta1-mutating-webhook-configuration-list:
      about: "watch individual changes to a list of MutatingWebhookConfiguration. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-admissionregistration-v1beta1-mutating-webhook-configuration:
      about: "watch changes to an object of kind MutatingWebhookConfiguration. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the MutatingWebhookConfiguration"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-admissionregistration-v1beta1-validating-webhook-configuration-list:
      about: "watch individual changes to a list of ValidatingWebhookConfiguration. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-admissionregistration-v1beta1-validating-webhook-configuration:
      about: "watch changes to an object of kind ValidatingWebhookConfiguration. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ValidatingWebhookConfiguration"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apiextensions-v1beta1-custom-resource-definition-list:
      about: "watch individual changes to a list of CustomResourceDefinition. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apiextensions-v1beta1-custom-resource-definition:
      about: "watch changes to an object of kind CustomResourceDefinition. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CustomResourceDefinition"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apiregistration-v1api-service-list:
      about: "watch individual changes to a list of APIService. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apiregistration-v1api-service:
      about: "watch changes to an object of kind APIService. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the APIService"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apiregistration-v1beta1-api-service-list:
      about: "watch individual changes to a list of APIService. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apiregistration-v1beta1-api-service:
      about: "watch changes to an object of kind APIService. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the APIService"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1-controller-revision-list-for-all-namespaces:
      about: "watch individual changes to a list of ControllerRevision. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1-daemon-set-list-for-all-namespaces:
      about: "watch individual changes to a list of DaemonSet. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1-deployment-list-for-all-namespaces:
      about: "watch individual changes to a list of Deployment. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1-namespaced-controller-revision-list:
      about: "watch individual changes to a list of ControllerRevision. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1-namespaced-controller-revision:
      about: "watch changes to an object of kind ControllerRevision. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ControllerRevision"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1-namespaced-daemon-set-list:
      about: "watch individual changes to a list of DaemonSet. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1-namespaced-daemon-set:
      about: "watch changes to an object of kind DaemonSet. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1-namespaced-deployment-list:
      about: "watch individual changes to a list of Deployment. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1-namespaced-deployment:
      about: "watch changes to an object of kind Deployment. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1-namespaced-replica-set-list:
      about: "watch individual changes to a list of ReplicaSet. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1-namespaced-replica-set:
      about: "watch changes to an object of kind ReplicaSet. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1-namespaced-stateful-set-list:
      about: "watch individual changes to a list of StatefulSet. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1-namespaced-stateful-set:
      about: "watch changes to an object of kind StatefulSet. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1-replica-set-list-for-all-namespaces:
      about: "watch individual changes to a list of ReplicaSet. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1-stateful-set-list-for-all-namespaces:
      about: "watch individual changes to a list of StatefulSet. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta1-controller-revision-list-for-all-namespaces:
      about: "watch individual changes to a list of ControllerRevision. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta1-deployment-list-for-all-namespaces:
      about: "watch individual changes to a list of Deployment. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta1-namespaced-controller-revision-list:
      about: "watch individual changes to a list of ControllerRevision. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta1-namespaced-controller-revision:
      about: "watch changes to an object of kind ControllerRevision. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ControllerRevision"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta1-namespaced-deployment-list:
      about: "watch individual changes to a list of Deployment. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta1-namespaced-deployment:
      about: "watch changes to an object of kind Deployment. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta1-namespaced-stateful-set-list:
      about: "watch individual changes to a list of StatefulSet. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta1-namespaced-stateful-set:
      about: "watch changes to an object of kind StatefulSet. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta1-stateful-set-list-for-all-namespaces:
      about: "watch individual changes to a list of StatefulSet. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta2-controller-revision-list-for-all-namespaces:
      about: "watch individual changes to a list of ControllerRevision. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta2-daemon-set-list-for-all-namespaces:
      about: "watch individual changes to a list of DaemonSet. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta2-deployment-list-for-all-namespaces:
      about: "watch individual changes to a list of Deployment. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta2-namespaced-controller-revision-list:
      about: "watch individual changes to a list of ControllerRevision. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta2-namespaced-controller-revision:
      about: "watch changes to an object of kind ControllerRevision. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ControllerRevision"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta2-namespaced-daemon-set-list:
      about: "watch individual changes to a list of DaemonSet. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta2-namespaced-daemon-set:
      about: "watch changes to an object of kind DaemonSet. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta2-namespaced-deployment-list:
      about: "watch individual changes to a list of Deployment. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta2-namespaced-deployment:
      about: "watch changes to an object of kind Deployment. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta2-namespaced-replica-set-list:
      about: "watch individual changes to a list of ReplicaSet. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta2-namespaced-replica-set:
      about: "watch changes to an object of kind ReplicaSet. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta2-namespaced-stateful-set-list:
      about: "watch individual changes to a list of StatefulSet. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta2-namespaced-stateful-set:
      about: "watch changes to an object of kind StatefulSet. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StatefulSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta2-replica-set-list-for-all-namespaces:
      about: "watch individual changes to a list of ReplicaSet. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-apps-v1beta2-stateful-set-list-for-all-namespaces:
      about: "watch individual changes to a list of StatefulSet. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-auditregistration-v1alpha1-audit-sink-list:
      about: "watch individual changes to a list of AuditSink. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-auditregistration-v1alpha1-audit-sink:
      about: "watch changes to an object of kind AuditSink. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the AuditSink"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-autoscaling-v1-horizontal-pod-autoscaler-list-for-all-namespaces:
      about: "watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-autoscaling-v1-namespaced-horizontal-pod-autoscaler-list:
      about: "watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-autoscaling-v1-namespaced-horizontal-pod-autoscaler:
      about: "watch changes to an object of kind HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-autoscaling-v2beta1-horizontal-pod-autoscaler-list-for-all-namespaces:
      about: "watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-autoscaling-v2beta1-namespaced-horizontal-pod-autoscaler-list:
      about: "watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-autoscaling-v2beta1-namespaced-horizontal-pod-autoscaler:
      about: "watch changes to an object of kind HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-autoscaling-v2beta2-horizontal-pod-autoscaler-list-for-all-namespaces:
      about: "watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-autoscaling-v2beta2-namespaced-horizontal-pod-autoscaler-list:
      about: "watch individual changes to a list of HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-autoscaling-v2beta2-namespaced-horizontal-pod-autoscaler:
      about: "watch changes to an object of kind HorizontalPodAutoscaler. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the HorizontalPodAutoscaler"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-batch-v1-job-list-for-all-namespaces:
      about: "watch individual changes to a list of Job. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-batch-v1-namespaced-job-list:
      about: "watch individual changes to a list of Job. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-batch-v1-namespaced-job:
      about: "watch changes to an object of kind Job. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Job"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-batch-v1beta1-cron-job-list-for-all-namespaces:
      about: "watch individual changes to a list of CronJob. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-batch-v1beta1-namespaced-cron-job-list:
      about: "watch individual changes to a list of CronJob. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-batch-v1beta1-namespaced-cron-job:
      about: "watch changes to an object of kind CronJob. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CronJob"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-batch-v2alpha1-cron-job-list-for-all-namespaces:
      about: "watch individual changes to a list of CronJob. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-batch-v2alpha1-namespaced-cron-job-list:
      about: "watch individual changes to a list of CronJob. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-batch-v2alpha1-namespaced-cron-job:
      about: "watch changes to an object of kind CronJob. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CronJob"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-certificates-v1beta1-certificate-signing-request-list:
      about: "watch individual changes to a list of CertificateSigningRequest. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-certificates-v1beta1-certificate-signing-request:
      about: "watch changes to an object of kind CertificateSigningRequest. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CertificateSigningRequest"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-coordination-v1-lease-list-for-all-namespaces:
      about: "watch individual changes to a list of Lease. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-coordination-v1-namespaced-lease-list:
      about: "watch individual changes to a list of Lease. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-coordination-v1-namespaced-lease:
      about: "watch changes to an object of kind Lease. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Lease"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-coordination-v1beta1-lease-list-for-all-namespaces:
      about: "watch individual changes to a list of Lease. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-coordination-v1beta1-namespaced-lease-list:
      about: "watch individual changes to a list of Lease. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-coordination-v1beta1-namespaced-lease:
      about: "watch changes to an object of kind Lease. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Lease"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-events-v1beta1-event-list-for-all-namespaces:
      about: "watch individual changes to a list of Event. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-events-v1beta1-namespaced-event-list:
      about: "watch individual changes to a list of Event. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-events-v1beta1-namespaced-event:
      about: "watch changes to an object of kind Event. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Event"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-extensions-v1beta1-daemon-set-list-for-all-namespaces:
      about: "watch individual changes to a list of DaemonSet. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-extensions-v1beta1-deployment-list-for-all-namespaces:
      about: "watch individual changes to a list of Deployment. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-extensions-v1beta1-ingress-list-for-all-namespaces:
      about: "watch individual changes to a list of Ingress. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-extensions-v1beta1-namespaced-daemon-set-list:
      about: "watch individual changes to a list of DaemonSet. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-extensions-v1beta1-namespaced-daemon-set:
      about: "watch changes to an object of kind DaemonSet. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the DaemonSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-extensions-v1beta1-namespaced-deployment-list:
      about: "watch individual changes to a list of Deployment. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-extensions-v1beta1-namespaced-deployment:
      about: "watch changes to an object of kind Deployment. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Deployment"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-extensions-v1beta1-namespaced-ingress-list:
      about: "watch individual changes to a list of Ingress. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-extensions-v1beta1-namespaced-ingress:
      about: "watch changes to an object of kind Ingress. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Ingress"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-extensions-v1beta1-namespaced-network-policy-list:
      about: "watch individual changes to a list of NetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-extensions-v1beta1-namespaced-network-policy:
      about: "watch changes to an object of kind NetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the NetworkPolicy"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-extensions-v1beta1-namespaced-replica-set-list:
      about: "watch individual changes to a list of ReplicaSet. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-extensions-v1beta1-namespaced-replica-set:
      about: "watch changes to an object of kind ReplicaSet. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ReplicaSet"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-extensions-v1beta1-network-policy-list-for-all-namespaces:
      about: "watch individual changes to a list of NetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-extensions-v1beta1-pod-security-policy-list:
      about: "watch individual changes to a list of PodSecurityPolicy. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-extensions-v1beta1-pod-security-policy:
      about: "watch changes to an object of kind PodSecurityPolicy. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodSecurityPolicy"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-extensions-v1beta1-replica-set-list-for-all-namespaces:
      about: "watch individual changes to a list of ReplicaSet. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-networking-v1-namespaced-network-policy-list:
      about: "watch individual changes to a list of NetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-networking-v1-namespaced-network-policy:
      about: "watch changes to an object of kind NetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the NetworkPolicy"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-networking-v1-network-policy-list-for-all-namespaces:
      about: "watch individual changes to a list of NetworkPolicy. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-networking-v1beta1-ingress-list-for-all-namespaces:
      about: "watch individual changes to a list of Ingress. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-networking-v1beta1-namespaced-ingress-list:
      about: "watch individual changes to a list of Ingress. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-networking-v1beta1-namespaced-ingress:
      about: "watch changes to an object of kind Ingress. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Ingress"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-node-v1alpha1-runtime-class-list:
      about: "watch individual changes to a list of RuntimeClass. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-node-v1alpha1-runtime-class:
      about: "watch changes to an object of kind RuntimeClass. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the RuntimeClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-node-v1beta1-runtime-class-list:
      about: "watch individual changes to a list of RuntimeClass. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-node-v1beta1-runtime-class:
      about: "watch changes to an object of kind RuntimeClass. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the RuntimeClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-policy-v1beta1-namespaced-pod-disruption-budget-list:
      about: "watch individual changes to a list of PodDisruptionBudget. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-policy-v1beta1-namespaced-pod-disruption-budget:
      about: "watch changes to an object of kind PodDisruptionBudget. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodDisruptionBudget"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-policy-v1beta1-pod-disruption-budget-list-for-all-namespaces:
      about: "watch individual changes to a list of PodDisruptionBudget. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-policy-v1beta1-pod-security-policy-list:
      about: "watch individual changes to a list of PodSecurityPolicy. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-policy-v1beta1-pod-security-policy:
      about: "watch changes to an object of kind PodSecurityPolicy. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodSecurityPolicy"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1-cluster-role-binding-list:
      about: "watch individual changes to a list of ClusterRoleBinding. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1-cluster-role-binding:
      about: "watch changes to an object of kind ClusterRoleBinding. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRoleBinding"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1-cluster-role-list:
      about: "watch individual changes to a list of ClusterRole. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1-cluster-role:
      about: "watch changes to an object of kind ClusterRole. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRole"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1-namespaced-role-binding-list:
      about: "watch individual changes to a list of RoleBinding. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1-namespaced-role-binding:
      about: "watch changes to an object of kind RoleBinding. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the RoleBinding"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1-namespaced-role-list:
      about: "watch individual changes to a list of Role. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1-namespaced-role:
      about: "watch changes to an object of kind Role. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Role"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1-role-binding-list-for-all-namespaces:
      about: "watch individual changes to a list of RoleBinding. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1-role-list-for-all-namespaces:
      about: "watch individual changes to a list of Role. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1alpha1-cluster-role-binding-list:
      about: "watch individual changes to a list of ClusterRoleBinding. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1alpha1-cluster-role-binding:
      about: "watch changes to an object of kind ClusterRoleBinding. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRoleBinding"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1alpha1-cluster-role-list:
      about: "watch individual changes to a list of ClusterRole. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1alpha1-cluster-role:
      about: "watch changes to an object of kind ClusterRole. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRole"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1alpha1-namespaced-role-binding-list:
      about: "watch individual changes to a list of RoleBinding. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1alpha1-namespaced-role-binding:
      about: "watch changes to an object of kind RoleBinding. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the RoleBinding"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1alpha1-namespaced-role-list:
      about: "watch individual changes to a list of Role. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1alpha1-namespaced-role:
      about: "watch changes to an object of kind Role. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Role"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1alpha1-role-binding-list-for-all-namespaces:
      about: "watch individual changes to a list of RoleBinding. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1alpha1-role-list-for-all-namespaces:
      about: "watch individual changes to a list of Role. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1beta1-cluster-role-binding-list:
      about: "watch individual changes to a list of ClusterRoleBinding. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1beta1-cluster-role-binding:
      about: "watch changes to an object of kind ClusterRoleBinding. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRoleBinding"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1beta1-cluster-role-list:
      about: "watch individual changes to a list of ClusterRole. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1beta1-cluster-role:
      about: "watch changes to an object of kind ClusterRole. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the ClusterRole"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1beta1-namespaced-role-binding-list:
      about: "watch individual changes to a list of RoleBinding. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1beta1-namespaced-role-binding:
      about: "watch changes to an object of kind RoleBinding. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the RoleBinding"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1beta1-namespaced-role-list:
      about: "watch individual changes to a list of Role. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1beta1-namespaced-role:
      about: "watch changes to an object of kind Role. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Role"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1beta1-role-binding-list-for-all-namespaces:
      about: "watch individual changes to a list of RoleBinding. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-rbac-authorization-v1beta1-role-list-for-all-namespaces:
      about: "watch individual changes to a list of Role. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-scheduling-v1-priority-class-list:
      about: "watch individual changes to a list of PriorityClass. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-scheduling-v1-priority-class:
      about: "watch changes to an object of kind PriorityClass. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PriorityClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-scheduling-v1alpha1-priority-class-list:
      about: "watch individual changes to a list of PriorityClass. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-scheduling-v1alpha1-priority-class:
      about: "watch changes to an object of kind PriorityClass. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PriorityClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-scheduling-v1beta1-priority-class-list:
      about: "watch individual changes to a list of PriorityClass. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-scheduling-v1beta1-priority-class:
      about: "watch changes to an object of kind PriorityClass. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PriorityClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-settings-v1alpha1-namespaced-pod-preset-list:
      about: "watch individual changes to a list of PodPreset. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-settings-v1alpha1-namespaced-pod-preset:
      about: "watch changes to an object of kind PodPreset. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodPreset"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-settings-v1alpha1-pod-preset-list-for-all-namespaces:
      about: "watch individual changes to a list of PodPreset. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-storage-v1-storage-class-list:
      about: "watch individual changes to a list of StorageClass. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-storage-v1-storage-class:
      about: "watch changes to an object of kind StorageClass. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StorageClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-storage-v1-volume-attachment-list:
      about: "watch individual changes to a list of VolumeAttachment. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-storage-v1-volume-attachment:
      about: "watch changes to an object of kind VolumeAttachment. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the VolumeAttachment"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-storage-v1alpha1-volume-attachment-list:
      about: "watch individual changes to a list of VolumeAttachment. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-storage-v1alpha1-volume-attachment:
      about: "watch changes to an object of kind VolumeAttachment. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the VolumeAttachment"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-storage-v1beta1-csi-driver-list:
      about: "watch individual changes to a list of CSIDriver. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-storage-v1beta1-csi-driver:
      about: "watch changes to an object of kind CSIDriver. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CSIDriver"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-storage-v1beta1-csi-node-list:
      about: "watch individual changes to a list of CSINode. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-storage-v1beta1-csi-node:
      about: "watch changes to an object of kind CSINode. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the CSINode"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-storage-v1beta1-storage-class-list:
      about: "watch individual changes to a list of StorageClass. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-storage-v1beta1-storage-class:
      about: "watch changes to an object of kind StorageClass. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the StorageClass"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-storage-v1beta1-volume-attachment-list:
      about: "watch individual changes to a list of VolumeAttachment. deprecated: use the 'watch' parameter with a list operation instead."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
  - watch-storage-v1beta1-volume-attachment:
      about: "watch changes to an object of kind VolumeAttachment. deprecated: use the 'watch' parameter with a list operation instead, filtered to a single item with the 'fieldSelector' parameter."
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the VolumeAttachment"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true


  - get-code-version:
      about: "get the code version"

  - create-apiregistration-v1api-service:
      about: "create an APIService"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ApiService) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apiregistration-v1api-service:
      about: "read the specified APIService"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the APIService"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apiregistration-v1api-service:
      about: "replace the specified APIService"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ApiService) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the APIService"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apiregistration-v1api-service-status:
      about: "read status of the specified APIService"
      args:
        - name:
            long: name
            required: true
            help: "name of the APIService"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apiregistration-v1api-service-status:
      about: "replace status of the specified APIService"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ApiService) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the APIService"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-apiregistration-v1api-service:
      about: "list or watch objects of kind APIService"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true




  - create-apiregistration-v1beta1-api-service:
      about: "create an APIService"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ApiService) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apiregistration-v1beta1-api-service:
      about: "read the specified APIService"
      args:
        - exact:
            long: exact
            help: "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - export:
            long: export
            help: "Should this value be exported.  Export strips fields that a user can not specify. Deprecated. Planned for removal in 1.18."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the APIService"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apiregistration-v1beta1-api-service:
      about: "replace the specified APIService"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ApiService) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the APIService"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - read-apiregistration-v1beta1-api-service-status:
      about: "read status of the specified APIService"
      args:
        - name:
            long: name
            required: true
            help: "name of the APIService"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
  - replace-apiregistration-v1beta1-api-service-status:
      about: "replace status of the specified APIService"
      args:
        - payload:
            long: payload
            help: "Path to payload (schema: ApiService) or pass '-' for stdin"
            takes_value: true
            required: true
        - dry-run:
            long: dry-run
            help: "When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed"
            takes_value: true
        - field-manager:
            long: field-manager
            help: "fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the APIService"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true


  - list-apiregistration-v1beta1-api-service:
      about: "list or watch objects of kind APIService"
      args:
        - allow-watch-bookmarks:
            long: allow-watch-bookmarks
            help: "allowWatchBookmarks requests watch events with type \"BOOKMARK\". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.\n\nThis field is alpha and can be changed or removed without notice."
            takes_value: true
        - continue:
            long: continue
            help: "The continue option should be set when retrieving more results from the server. Since this value is server defined, clients may only use the continue value from a previous query result with identical query parameters (except for the value of continue) and the server may reject a continue value it does not recognize. If the specified continue value is no longer valid whether due to expiration (generally five to fifteen minutes) or a configuration change on the server, the server will respond with a 410 ResourceExpired error together with a continue token. If the client needs a consistent list, it must restart their list without the continue field. Otherwise, the client may send another list request with the token received with the 410 error, the server will respond with a list starting from the next key, but from the latest snapshot, which is inconsistent from the previous list results - objects that are created, modified, or deleted after the first list request will be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last resourceVersion value returned by the server and not miss any modifications."
            takes_value: true
        - field-selector:
            long: field-selector
            help: "A selector to restrict the list of returned objects by their fields. Defaults to everything."
            takes_value: true
        - label-selector:
            long: label-selector
            help: "A selector to restrict the list of returned objects by their labels. Defaults to everything."
            takes_value: true
        - limit:
            long: limit
            help: "limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned."
            takes_value: true
        - resource-version:
            long: resource-version
            help: "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv."
            takes_value: true
        - timeout-seconds:
            long: timeout-seconds
            help: "Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity."
            takes_value: true
        - watch:
            long: watch
            help: "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion."
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true




  - connect-core-v1-post-namespaced-pod-attach:
      about: "connect POST requests to attach of Pod"
      args:
        - container:
            long: container
            help: "The container in which to execute the command. Defaults to only container if there is only one container in the pod."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodAttachOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - stderr:
            long: stderr
            help: "Stderr if true indicates that stderr is to be redirected for the attach call. Defaults to true."
            takes_value: true
        - stdin:
            long: stdin
            help: "Stdin if true, redirects the standard input stream of the pod for this call. Defaults to false."
            takes_value: true
        - stdout:
            long: stdout
            help: "Stdout if true indicates that stdout is to be redirected for the attach call. Defaults to true."
            takes_value: true
        - tty:
            long: tty
            help: "TTY if true indicates that a tty will be allocated for the attach call. This is passed through the container runtime so the tty is allocated on the worker node by the container runtime. Defaults to false."
            takes_value: true
  - connect-core-v1-get-namespaced-pod-exec:
      about: "connect GET requests to exec of Pod"
      args:
        - command:
            long: command
            help: "Command is the remote command to execute. argv array. Not executed within a shell."
            takes_value: true
        - container:
            long: container
            help: "Container in which to execute the command. Defaults to only container if there is only one container in the pod."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodExecOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - stderr:
            long: stderr
            help: "Redirect the standard error stream of the pod for this call. Defaults to true."
            takes_value: true
        - stdin:
            long: stdin
            help: "Redirect the standard input stream of the pod for this call. Defaults to false."
            takes_value: true
        - stdout:
            long: stdout
            help: "Redirect the standard output stream of the pod for this call. Defaults to true."
            takes_value: true
        - tty:
            long: tty
            help: "TTY if true indicates that a tty will be allocated for the exec call. Defaults to false."
            takes_value: true
  - connect-core-v1-post-namespaced-pod-exec:
      about: "connect POST requests to exec of Pod"
      args:
        - command:
            long: command
            help: "Command is the remote command to execute. argv array. Not executed within a shell."
            takes_value: true
        - container:
            long: container
            help: "Container in which to execute the command. Defaults to only container if there is only one container in the pod."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the PodExecOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - stderr:
            long: stderr
            help: "Redirect the standard error stream of the pod for this call. Defaults to true."
            takes_value: true
        - stdin:
            long: stdin
            help: "Redirect the standard input stream of the pod for this call. Defaults to false."
            takes_value: true
        - stdout:
            long: stdout
            help: "Redirect the standard output stream of the pod for this call. Defaults to true."
            takes_value: true
        - tty:
            long: tty
            help: "TTY if true indicates that a tty will be allocated for the exec call. Defaults to false."
            takes_value: true
  - read-core-v1-namespaced-pod-log:
      about: "read log of the specified Pod"
      args:
        - container:
            long: container
            help: "The container for which to stream logs. Defaults to only container if there is one container in the pod."
            takes_value: true
        - follow:
            long: follow
            help: "Follow the log stream of the pod. Defaults to false."
            takes_value: true
        - limit-bytes:
            long: limit-bytes
            help: "If set, the number of bytes to read from the server before terminating the log output. This may not display a complete final line of logging, and may return slightly more or slightly less than the specified limit."
            takes_value: true
        - name:
            long: name
            required: true
            help: "name of the Pod"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - pretty:
            long: pretty
            help: "If 'true', then the output is pretty printed."
            takes_value: true
        - previous:
            long: previous
            help: "Return previous terminated container logs. Defaults to false."
            takes_value: true
        - since-seconds:
            long: since-seconds
            help: "A relative time in seconds before the current time from which to show logs. If this value precedes the time a pod was started, only logs since the pod start will be returned. If this value is in the future, no logs will be returned. Only one of sinceSeconds or sinceTime may be specified."
            takes_value: true
        - tail-lines:
            long: tail-lines
            help: "If set, the number of lines from the end of the logs to show. If not specified, logs are shown from the creation of the container or sinceSeconds or sinceTime"
            takes_value: true
        - timestamps:
            long: timestamps
            help: "If true, add an RFC3339 or RFC3339Nano timestamp at the beginning of every line of log output. Defaults to false."
            takes_value: true
  - connect-core-v1-get-namespaced-pod-portforward:
      about: "connect GET requests to portforward of Pod"
      args:
        - name:
            long: name
            required: true
            help: "name of the PodPortForwardOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - ports:
            long: ports
            help: "List of ports to forward Required when using WebSockets"
            takes_value: true
  - connect-core-v1-post-namespaced-pod-portforward:
      about: "connect POST requests to portforward of Pod"
      args:
        - name:
            long: name
            required: true
            help: "name of the PodPortForwardOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - ports:
            long: ports
            help: "List of ports to forward Required when using WebSockets"
            takes_value: true
  - connect-core-v1-get-namespaced-pod-proxy:
      about: "connect GET requests to proxy of Pod"
      args:
        - name:
            long: name
            required: true
            help: "name of the PodProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            help: "Path is the URL path to use for the current proxy request to pod."
            takes_value: true
  - connect-core-v1-put-namespaced-pod-proxy:
      about: "connect PUT requests to proxy of Pod"
      args:
        - name:
            long: name
            required: true
            help: "name of the PodProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            help: "Path is the URL path to use for the current proxy request to pod."
            takes_value: true
  - connect-core-v1-post-namespaced-pod-proxy:
      about: "connect POST requests to proxy of Pod"
      args:
        - name:
            long: name
            required: true
            help: "name of the PodProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            help: "Path is the URL path to use for the current proxy request to pod."
            takes_value: true
  - connect-core-v1-delete-namespaced-pod-proxy:
      about: "connect DELETE requests to proxy of Pod"
      args:
        - name:
            long: name
            required: true
            help: "name of the PodProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            help: "Path is the URL path to use for the current proxy request to pod."
            takes_value: true
  - connect-core-v1-options-namespaced-pod-proxy:
      about: "connect OPTIONS requests to proxy of Pod"
      args:
        - name:
            long: name
            required: true
            help: "name of the PodProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            help: "Path is the URL path to use for the current proxy request to pod."
            takes_value: true
  - connect-core-v1-head-namespaced-pod-proxy:
      about: "connect HEAD requests to proxy of Pod"
      args:
        - name:
            long: name
            required: true
            help: "name of the PodProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            help: "Path is the URL path to use for the current proxy request to pod."
            takes_value: true
  - connect-core-v1-patch-namespaced-pod-proxy:
      about: "connect PATCH requests to proxy of Pod"
      args:
        - name:
            long: name
            required: true
            help: "name of the PodProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            help: "Path is the URL path to use for the current proxy request to pod."
            takes_value: true
  - connect-core-v1-get-namespaced-pod-proxy-with-path:
      about: "connect GET requests to proxy of Pod"
      args:
        - name:
            long: name
            required: true
            help: "name of the PodProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            required: true
            help: "path to the resource"
            takes_value: true
  - connect-core-v1-put-namespaced-pod-proxy-with-path:
      about: "connect PUT requests to proxy of Pod"
      args:
        - name:
            long: name
            required: true
            help: "name of the PodProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            required: true
            help: "path to the resource"
            takes_value: true
  - connect-core-v1-post-namespaced-pod-proxy-with-path:
      about: "connect POST requests to proxy of Pod"
      args:
        - name:
            long: name
            required: true
            help: "name of the PodProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            required: true
            help: "path to the resource"
            takes_value: true
  - connect-core-v1-delete-namespaced-pod-proxy-with-path:
      about: "connect DELETE requests to proxy of Pod"
      args:
        - name:
            long: name
            required: true
            help: "name of the PodProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            required: true
            help: "path to the resource"
            takes_value: true
  - connect-core-v1-options-namespaced-pod-proxy-with-path:
      about: "connect OPTIONS requests to proxy of Pod"
      args:
        - name:
            long: name
            required: true
            help: "name of the PodProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            required: true
            help: "path to the resource"
            takes_value: true
  - connect-core-v1-head-namespaced-pod-proxy-with-path:
      about: "connect HEAD requests to proxy of Pod"
      args:
        - name:
            long: name
            required: true
            help: "name of the PodProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            required: true
            help: "path to the resource"
            takes_value: true
  - connect-core-v1-patch-namespaced-pod-proxy-with-path:
      about: "connect PATCH requests to proxy of Pod"
      args:
        - name:
            long: name
            required: true
            help: "name of the PodProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            required: true
            help: "path to the resource"
            takes_value: true
  - connect-core-v1-get-namespaced-service-proxy:
      about: "connect GET requests to proxy of Service"
      args:
        - name:
            long: name
            required: true
            help: "name of the ServiceProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            help: "Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy."
            takes_value: true
  - connect-core-v1-put-namespaced-service-proxy:
      about: "connect PUT requests to proxy of Service"
      args:
        - name:
            long: name
            required: true
            help: "name of the ServiceProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            help: "Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy."
            takes_value: true
  - connect-core-v1-post-namespaced-service-proxy:
      about: "connect POST requests to proxy of Service"
      args:
        - name:
            long: name
            required: true
            help: "name of the ServiceProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            help: "Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy."
            takes_value: true
  - connect-core-v1-delete-namespaced-service-proxy:
      about: "connect DELETE requests to proxy of Service"
      args:
        - name:
            long: name
            required: true
            help: "name of the ServiceProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            help: "Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy."
            takes_value: true
  - connect-core-v1-options-namespaced-service-proxy:
      about: "connect OPTIONS requests to proxy of Service"
      args:
        - name:
            long: name
            required: true
            help: "name of the ServiceProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            help: "Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy."
            takes_value: true
  - connect-core-v1-head-namespaced-service-proxy:
      about: "connect HEAD requests to proxy of Service"
      args:
        - name:
            long: name
            required: true
            help: "name of the ServiceProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            help: "Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy."
            takes_value: true
  - connect-core-v1-patch-namespaced-service-proxy:
      about: "connect PATCH requests to proxy of Service"
      args:
        - name:
            long: name
            required: true
            help: "name of the ServiceProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            help: "Path is the part of URLs that include service endpoints, suffixes, and parameters to use for the current proxy request to service. For example, the whole request URL is http://localhost/api/v1/namespaces/kube-system/services/elasticsearch-logging/_search?q=user:kimchy. Path is _search?q=user:kimchy."
            takes_value: true
  - connect-core-v1-get-namespaced-service-proxy-with-path:
      about: "connect GET requests to proxy of Service"
      args:
        - name:
            long: name
            required: true
            help: "name of the ServiceProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            required: true
            help: "path to the resource"
            takes_value: true
  - connect-core-v1-put-namespaced-service-proxy-with-path:
      about: "connect PUT requests to proxy of Service"
      args:
        - name:
            long: name
            required: true
            help: "name of the ServiceProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            required: true
            help: "path to the resource"
            takes_value: true
  - connect-core-v1-post-namespaced-service-proxy-with-path:
      about: "connect POST requests to proxy of Service"
      args:
        - name:
            long: name
            required: true
            help: "name of the ServiceProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            required: true
            help: "path to the resource"
            takes_value: true
  - connect-core-v1-delete-namespaced-service-proxy-with-path:
      about: "connect DELETE requests to proxy of Service"
      args:
        - name:
            long: name
            required: true
            help: "name of the ServiceProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            required: true
            help: "path to the resource"
            takes_value: true
  - connect-core-v1-options-namespaced-service-proxy-with-path:
      about: "connect OPTIONS requests to proxy of Service"
      args:
        - name:
            long: name
            required: true
            help: "name of the ServiceProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            required: true
            help: "path to the resource"
            takes_value: true
  - connect-core-v1-head-namespaced-service-proxy-with-path:
      about: "connect HEAD requests to proxy of Service"
      args:
        - name:
            long: name
            required: true
            help: "name of the ServiceProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            required: true
            help: "path to the resource"
            takes_value: true
  - connect-core-v1-patch-namespaced-service-proxy-with-path:
      about: "connect PATCH requests to proxy of Service"
      args:
        - name:
            long: name
            required: true
            help: "name of the ServiceProxyOptions"
            takes_value: true
        - namespace:
            long: namespace
            required: true
            help: "object name and auth scope, such as for teams and projects"
            takes_value: true
        - path:
            long: path
            required: true
            help: "path to the resource"
            takes_value: true
  - connect-core-v1-get-node-proxy:
      about: "connect GET requests to proxy of Node"
      args:
        - name:
            long: name
            required: true
            help: "name of the NodeProxyOptions"
            takes_value: true
        - path:
            long: path
            help: "Path is the URL path to use for the current proxy request to node."
            takes_value: true
  - connect-core-v1-put-node-proxy:
      about: "connect PUT requests to proxy of Node"
      args:
        - name:
            long: name
            required: true
            help: "name of the NodeProxyOptions"
            takes_value: true
        - path:
            long: path
            help: "Path is the URL path to use for the current proxy request to node."
            takes_value: true
  - connect-core-v1-post-node-proxy:
      about: "connect POST requests to proxy of Node"
      args:
        - name:
            long: name
            required: true
            help: "name of the NodeProxyOptions"
            takes_value: true
        - path:
            long: path
            help: "Path is the URL path to use for the current proxy request to node."
            takes_value: true
  - connect-core-v1-delete-node-proxy:
      about: "connect DELETE requests to proxy of Node"
      args:
        - name:
            long: name
            required: true
            help: "name of the NodeProxyOptions"
            takes_value: true
        - path:
            long: path
            help: "Path is the URL path to use for the current proxy request to node."
            takes_value: true
  - connect-core-v1-options-node-proxy:
      about: "connect OPTIONS requests to proxy of Node"
      args:
        - name:
            long: name
            required: true
            help: "name of the NodeProxyOptions"
            takes_value: true
        - path:
            long: path
            help: "Path is the URL path to use for the current proxy request to node."
            takes_value: true
  - connect-core-v1-head-node-proxy:
      about: "connect HEAD requests to proxy of Node"
      args:
        - name:
            long: name
            required: true
            help: "name of the NodeProxyOptions"
            takes_value: true
        - path:
            long: path
            help: "Path is the URL path to use for the current proxy request to node."
            takes_value: true
  - connect-core-v1-patch-node-proxy:
      about: "connect PATCH requests to proxy of Node"
      args:
        - name:
            long: name
            required: true
            help: "name of the NodeProxyOptions"
            takes_value: true
        - path:
            long: path
            help: "Path is the URL path to use for the current proxy request to node."
            takes_value: true
  - connect-core-v1-get-node-proxy-with-path:
      about: "connect GET requests to proxy of Node"
      args:
        - name:
            long: name
            required: true
            help: "name of the NodeProxyOptions"
            takes_value: true
        - path:
            long: path
            required: true
            help: "path to the resource"
            takes_value: true
  - connect-core-v1-put-node-proxy-with-path:
      about: "connect PUT requests to proxy of Node"
      args:
        - name:
            long: name
            required: true
            help: "name of the NodeProxyOptions"
            takes_value: true
        - path:
            long: path
            required: true
            help: "path to the resource"
            takes_value: true
  - connect-core-v1-post-node-proxy-with-path:
      about: "connect POST requests to proxy of Node"
      args:
        - name:
            long: name
            required: true
            help: "name of the NodeProxyOptions"
            takes_value: true
        - path:
            long: path
            required: true
            help: "path to the resource"
            takes_value: true
  - connect-core-v1-delete-node-proxy-with-path:
      about: "connect DELETE requests to proxy of Node"
      args:
        - name:
            long: name
            required: true
            help: "name of the NodeProxyOptions"
            takes_value: true
        - path:
            long: path
            required: true
            help: "path to the resource"
            takes_value: true
  - connect-core-v1-options-node-proxy-with-path:
      about: "connect OPTIONS requests to proxy of Node"
      args:
        - name:
            long: name
            required: true
            help: "name of the NodeProxyOptions"
            takes_value: true
        - path:
            long: path
            required: true
            help: "path to the resource"
            takes_value: true
  - connect-core-v1-head-node-proxy-with-path:
      about: "connect HEAD requests to proxy of Node"
      args:
        - name:
            long: name
            required: true
            help: "name of the NodeProxyOptions"
            takes_value: true
        - path:
            long: path
            required: true
            help: "path to the resource"
            takes_value: true
  - connect-core-v1-patch-node-proxy-with-path:
      about: "connect PATCH requests to proxy of Node"
      args:
        - name:
            long: name
            required: true
            help: "name of the NodeProxyOptions"
            takes_value: true
        - path:
            long: path
            required: true
            help: "path to the resource"
            takes_value: true

