searchState.loadedDescShard("paperclip", 0, "Paperclip is a OpenAPI code generator for efficient …\nContains the error value\nInvalid base path URL.\nThe given directory cannot be used for generating code.\nThe name for the given definition is invalid.\nA valid path cannot be obtained for the given definition.\nInvalid host for URL.\nI/O errors.\nJSON coding errors.\nThe given schema object is an array, but the <code>items</code> field …\nThe name for the given definition is missing.\nContains the success value\nGlobal error which encapsulates all related errors.\nGeneric result used throughout this library.\nPaths listed in the spec must be unique.\nErrors in templating.\nCurrently, we only support OpenAPI v2, and eventually v3.\nError encountered during spec validation.\nYAML coding errors.\nPlugin types, traits and macros for actix-web framework.\nConverts your struct to support deserializing from an …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUtilities related to the OpenAPI v2 specification.\nDerive attribute for indicating that a type is an OpenAPI …\nDerive attribute for indicating that a type is an OpenAPI …\nMarker attribute for indicating that an object forbids …\nWrapper for <code>actix_web::App</code>.\nWorkaround for possibility to directly return HttpResponse …\nIndicates that this thingmabob has a path and a bunch of …\nExtension trait for actix-web applications.\nActix-specific trait for indicating that this entity can …\nWrapper for wrapping over <code>impl Responder</code> thingies (to …\nMarker attribute for indicating that the marked object can …\nMarker attribute for indicating that the marked object can …\nMarker attribute for indicating that a function is an …\nProxy for <code>actix_web::App::app_data</code>.\nBuilds and returns the <code>actix_web::App</code>.\nWrapper for <code>actix_web::App::configure</code>.\nProxy for <code>actix_web::App::data_factory</code>.\nProxy for <code>actix_web::App::default_service</code>.\nThe definitions recorded by this object.\nCreates route handler with <code>paperclip::actix::web::Resource</code>.\nProxy for <code>actix_web::App::external_resource</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates route handler with <code>paperclip::actix::web::Resource</code>.\nCreates route handler with <code>paperclip::actix::web::Resource</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMap of HTTP methods and the associated API operations.\nCreates route handler with <code>paperclip::actix::web::Resource</code>.\nWhere this thing gets mounted.\nCreates route handler with <code>paperclip::actix::web::Resource</code>.\nCreates route handler with <code>paperclip::actix::web::Resource</code>.\nWrapper for <code>actix_web::App::route</code>.\nThe security definitions recorded by this object.\nWrapper for <code>actix_web::App::service</code>.\nTrim’s the Api base path from the start of all method …\nUpdate the definitions map (if needed).\nUpdates the given map of operations with operations …\nUpdate the parameters list in the given operation (if …\nUpdate the responses map in the given operation (if …\nUpdate the security map in the given operation (if needed).\nUpdate the security definition map (if needed).\nProxy module for <code>actix_web::web</code>.\nMounts the specification for all operations and definitions\nConverts the generated v2 specification to v3 and then …\nCalls the given function with <code>App</code> and JSON <code>Value</code> …\nCalls the given function with <code>App</code> and JSON <code>Value</code> …\nExposes the previously built JSON specification with …\nProxy for <code>actix_web::web::App::wrap</code>.\nConsumes this app and produces its wrapper to start …\nSame as <code>wrap_api</code> initializing with provided specification …\nProxy for <code>actix_web::web::App::wrap_fn</code>.\nA cheaply cloneable and sliceable chunk of contiguous …\nA unique reference to a contiguous slice of memory.\nApplication data wrapper and extractor.\nURL encoded payload extractor and responder.\n<code>Form</code> extractor configuration.\nAn incoming request.\nAn outgoing response.\nJSON extractor and responder.\n<code>Json</code> extractor configuration.\nExtract typed data from request path segments.\nPath extractor configuration\nExtract a request’s raw payload stream.\nConfiguration for request payloads.\nExtract typed information from the request’s query.\nQuery extractor configuration.\nRequest-local data extractor.\nWrapper for <code>actix_web::Resource</code>\nWrapper for <code>actix_web::Route</code>\nWrapper for <code>actix_web::Scope</code>\nWrapper for <code>actix_web::web::ServiceConfig</code>.\nReturns a reference to the application’s connection …\nProxy for <code>actix_web::Resource::app_data</code>.\nProxy for <code>actix_web::Scope::app_data</code>.\nProxy for <code>actix_web::web::ServiceConfig::app_data</code>.\nRetrieves a piece of application state.\nExecutes blocking function on a thread pool, returns …\nReturns a reference to this response’s body.\nConstructs a response builder with specific HTTP status.\nReturns the number of bytes the <code>BytesMut</code> can hold without …\nClears the buffer, removing all data.\nClears the buffer, removing all data. Existing capacity is …\nWrapper for <code>actix_web::Scope::configure</code>.\nReturns a reference a piece of connection data set in an …\nReturns connection info for the current request.\nSet predicate for allowed content types.\nSets whether or not the request must have a <code>Content-Type</code> …\nCreates <code>Bytes</code> instance from slice, by copying it.\nProxy for <code>actix_web::web::Resource::default_service</code>.\nProxy for <code>actix_web::web::Scope::default_service</code>.\nWrapper for <code>actix_web::web::delete</code>.\nDrops body and returns new response.\nThe source <code>error</code> for this response\nSet custom error handler\nSet custom error handler.\nSet custom error handler.\nSet custom error handler\nAppends given bytes to this <code>BytesMut</code>.\nReturns reference to the response-local data/extensions …\nReturns reference to the response-local data/extensions …\nProxy for <code>actix_web::web::ServiceConfig::external_resource</code>.\nConverts <code>self</code> into an immutable <code>Bytes</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert self into <code>BytesMut</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate an error response.\nDeserialize a <code>T</code> from the URL encoded query parameter …\nCreates a new <code>Bytes</code> from a static slice.\nReturns request’s original full URL.\nWrapper for <code>actix_web::web::get</code>.\nReturns reference to inner <code>T</code>.\nProxy for <code>actix_web::Resource::guard</code>.\nProxy for <code>actix_web::Scope::guard</code>.\nProxy for <code>actix_web::Route::guard</code>.\nWrapper for <code>actix_web::web::head</code>.\nReturns a reference to response head.\nThis method returns reference to the request head\nReturns a mutable reference to response head.\nGet the headers from the response\nReturns request’s headers.\nGet a mutable reference to the headers\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the response body, dropping all other parts.\nUnwrap to inner Payload type.\nUnwraps to the internal <code>Arc&lt;T&gt;</code>\nConsumes the <code>ReqData</code>, returning its wrapped data.\nUnwrap into inner <code>T</code> value.\nUnwrap into inner <code>T</code> value.\nUnwrap into inner <code>T</code> value.\nUnwrap into inner <code>T</code> value.\nReturns split head and body.\nReturns true if the <code>Bytes</code> has a length of 0.\nReturns true if the <code>BytesMut</code> has a length of 0.\nReturns true if this is the only reference to the data.\nKeep-alive status for this connection\nReturns the number of bytes contained in this <code>Bytes</code>.\nReturns the number of bytes contained in this <code>BytesMut</code>.\nSet maximum accepted payload size. By default this limit …\nSet maximum accepted payload size. By default this limit …\nSet maximum accepted payload size in bytes. The default …\nMap the current body type to another using a closure, …\nMap the current body to a type-erased <code>BoxBody</code>.\nMap the current body type <code>B</code> to <code>EitherBody::Left(B)</code>.\nMap the current body type <code>B</code> to <code>EitherBody::Right(B)</code>.\nReturns a reference to the URL parameters container.\nThe resource name that matched the path. Useful for …\nThe resource definition pattern that matched the path. …\nWrapper for <code>actix_web::web::method</code>.\nWrapper for <code>actix_web::Route::method</code>\nRead the Request method.\nSet required mime type of the request. By default mime …\nProxy for <code>actix_web::Resource::name</code>.\nWrapper for <code>actix_web::Resource::new</code>.\nWrapper for <code>actix_web::Scope::new</code>\nWrapper for <code>actix_web::Route::new</code>\nCreates a new empty <code>Bytes</code>.\nCreates a new <code>BytesMut</code> with default capacity.\nConstructs a response.\nCreate new <code>Data</code> instance.\nCreate new instance with a size limit (in bytes) and no …\nWrapper for <code>actix_web::web::options</code>.\nWrapper for <code>actix_web::web::patch</code>.\nThe target path of this request.\nReturns peer socket address.\nWrapper for <code>actix_web::web::post</code>.\nWrapper for <code>actix_web::web::put</code>.\nThe query string in the URL.\nReserves capacity for at least <code>additional</code> more bytes to be …\nResizes the buffer so that <code>len</code> is equal to <code>new_len</code>.\nWrapper for <code>actix_web::web::resource</code>.\nGet a reference to a <code>ResourceMap</code> of current application.\nWrapper for <code>actix_web::Resource::route</code>.\nWrapper for <code>actix_web::Scope::route</code>.\nWrapper for <code>actix_web::web::ServiceConfig::route</code>.\nWrapper for <code>actix_web::web::scope</code>.\nCreates a raw service for a specific path.\nWrapper for <code>actix_web::Scope::service</code>.\nWrapper for <code>actix_web::web::ServiceConfig::service</code>.\nSets new body.\nSets the length of the buffer.\nReturns a slice of self for the provided range.\nReturns a slice of self that is equivalent to the given …\nReturns the remaining spare capacity of the buffer as a …\nRemoves the bytes from the current view, returning them in …\nSplits the bytes into two at the given index.\nSplits the bytes into two at the given index.\nSplits the bytes into two at the given index.\nSplits the buffer into two at the given index.\nGet the response status code\nSet the <code>StatusCode</code> for this response\nCreates a new any-method route with handler.\nWrapper for <code>actix_web::Resource::to</code>.\nWrapper for <code>actix_web::Route::to</code>\nBuffers entire payload from request.\nBuffers payload from request up to <code>limit</code> bytes.\nShortens the buffer, keeping the first <code>len</code> bytes and …\nShortens the buffer, keeping the first <code>len</code> bytes and …\nTry to convert self into <code>BytesMut</code>.\nAttempts to cheaply reclaim already allocated capacity for …\nAbsorbs a <code>BytesMut</code> that was previously split off.\nConnection upgrade status\nRequest’s uri.\nGenerates URL for a named resource.\nGenerate URL for named resource\nRead the Request Version.\nConstructs a response with body\nCreates a new <code>BytesMut</code> with the specified capacity.\nProxy for <code>actix_web::web::Resource::wrap</code>.\nProxy for <code>actix_web::web::Scope::wrap</code>.\nProxy for <code>actix_web::web::Resource::wrap_fn</code>.\nProxy for <code>actix_web::web::Scope::wrap_fn</code>.\nCreates a new <code>BytesMut</code> containing <code>len</code> zeros.\nUnstabilized <code>Ready</code> future.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUnstabilized <code>ready</code> function.\nDefault schema if your schema doesn’t have any custom …\nOpenAPI v2 spec which can be traversed and resolved for …\nInterface for the <code>Schema</code> object.\nValue schema for maps (<code>additional_properties</code> field).\nMutable access to <code>additional_properties</code> field, if it’s a …\nCode generation for OpenAPI v2.\nExtension for custom coders to be used for decoding API …\nReturns whether this definition “is” or “has” <code>Any</code> …\nData type of this schema, if any (<code>type</code> field).\nDescription for this schema, if any (<code>description</code> field).\nEnum variants in this schema (if any). It’s …\nData type format used by this schema, if any (<code>format</code> …\nReturns the argument unchanged.\nDeserialize the schema from the given reader. Currently, …\nInterior mutability stuff.\nCalls <code>U::from(self)</code>.\nReturns whether this definition is cyclic.\nSchema for array definitions, if any (<code>items</code> field).\nMutable access to the <code>items</code> field, if it exists.\nModels used by OpenAPI v2.\nName of this schema, if any.\nMap of names and schema for properties, if it’s an …\nMutable access to <code>properties</code> field.\nReference to some other schema, if any (<code>$ref</code> field).\nReturns the required properties (if any) for this object.\nTraits used for code and spec generation.\nSet whether this definition is cyclic. This is done by the …\nSets the name for this schema. This is done by the …\nSet the reference to this schema.\nThis field is set manually, because we don’t know the …\nAdditional crates that need to be added to the manifest.\nMetadata for generating a crate.\nDefault emitter for anything that implements <code>Schema</code> trait.\nThe associated <code>Schema</code> implementor.\nMode of codegen (module, crate or CLI app).\nSome “thing” emitted by the emitter.\n<code>Emitter</code> represents the interface for generating the …\nHolds the state for your schema emitter.\nSome Rust type.\nWe’ve identified the Rust type, but then we also have a …\nNothing to do.\nBunch of emitted Rust objects.\nList of authors for this crate. Defaults to cargo’s …\nBase URL for this API.\nBuilds a schema. This resolves type aliases to known types …\nBuilds a schema. This resolves type aliases to known types …\nReturns the CamelCase name for some definition based on …\nReturns the CamelCase name for some definition based on …\nReturns the module path (from working directory) for the …\nReturns the module path (from working directory) for the …\nReturns the CamelCase name for the given definition.\nReturns the CamelCase name for the given definition.\nReturns an iterator of path components for the given …\nReturns an iterator of path components for the given …\nReturns the enum variant of a possible value in the given …\nReturns the enum variant of a possible value in the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEntrypoint for emitter. Given an API spec, generate code …\nEntrypoint for emitter. Given an API spec, generate code …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nModule prefix for using in generated code.\nWhether we’re planning to emit a lib, app or module.\nName of the crate. If this is not specified, then the name …\nWhether or not to make this a root crate.\nNamespace separation string.\nSimplified objects for codegen.\nSets the crate metadata for this session.\nSets the base URL for this session.\nReturns a reference to the underlying state.\nCalled whenever we encounter an operation that can’t be …\nCalled whenever we encounter an operation that can’t be …\nCalled whenever we don’t have an object for the module …\nCalled whenever we don’t have an object for the module …\nVersion (defaults to 0.1.0)\nWorking directory - the path in which the necessary …\nRepresents a (simplified) Rust struct or enum.\nRepresents the API object builder impl.\nRepresents the API object impl.\nContainer for the struct/enum containing fields/variants.\nRepresents a struct field.\nRepresents an enum variant.\nRequirement for an object corresponding to some operation.\nRepresents some parameter somewhere (header, path, query, …\nOperations in a path.\nWhether the object itself is required (in body) for this …\nWhether this field should be boxed.\nRequired fields of the “deepest” child type in the …\nWhether the response contains an <code>Any</code>. This is useful when …\nPreferred media range and decoder for the client. This is …\nIf the parameter is an array of values, then the format …\nWhether the operation is deprecated or not.\nDescription for this object (if any), to be used for docs.\nDescription of this operation (if any), to be used for …\nDescription of this operation (if any), to be used for …\nDescription of this operation (if any), to be used for …\nPreferred media range and encoder for the client. This is …\nGet a reference to the struct fields. <strong>Panics</strong> if this is …\nGet a mutable reference to the struct fields. <strong>Panics</strong> if …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCustom response headers for this operation (if any).\nOperation ID (if it’s provided in the schema).\nReturns a struct representing the impl for this object. …\nFields/variants based on whether this is a struct/enum.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether this object is an enum.\nReturns whether this response is a file.\nWhether this field is required (i.e., not optional).\nReturns whether this enum is to represent a string.\nWhether this operation returns a list of the associated …\nName of the struct (camel-cased).\nName of the parameter.\nName of the variant (case unspecified).\nName of the field.\nWhether this field’s type “is” or “has” an <code>Any</code> …\nParameters required for all operations in this path.\nParameters required for this operation.\nPath to this object from (generated) root module.\nPaths with operations which address this object.\nWhere the parameter lives.\nOperations for this object and their associated …\nWhether this parameter is required.\nResponse information for this operation.\nType path for this operation’s response (if any). If …\nType of the parameter as a path.\nType of the field as a path.\nValue of this variant (if any). Note that this is only …\nGet a reference to the enum variants. <strong>Panics</strong> if this is …\nGet a mutable reference to the enum variants. <strong>Panics</strong> if …\nCreate an object with the given name.\nFields if it’s a struct.\nFlag to represent whether this enum is a string. When that…\nVariants if it’s an enum.\nOpenAPI v2 (swagger) spec generic over parameter and …\nRepresents the en/decoder for some MIME media range.\n<code>x-rust-coders</code> global extension for custom encoders and …\nPossible formats for array values in parameter.\nContact object.\nSupported data types.\nSupported data type formats.\nOpenAPI v2 spec with defaults.\nOperation with default raw parameter and response.\nParameter with the default raw schema.\nPath item with default parameter and response.\nResponse with the default raw schema.\nDefault schema if your schema doesn’t have any custom …\nRaw version of schema.\n<code>Either</code> from “either” crate. We can’t use that crate …\nExternal Documentation object.\nHeader object.\nThe HTTP method used for an operation.\nInfo object.\nItems object.\nDefault coder for JSON.\nMedia range for JSON.\nLicense object.\nWrapper for <code>mime::MediaRange</code> to support <code>BTree{Set, Map}</code>.\nOperation object.\nThe protocol used for an operation.\nRequest parameter object.\nThe location of the parameter.\nPath item object.\nReference object.\nWrapper for schema. This uses <code>Arc&lt;RwLock&lt;S&gt;&gt;</code> for interior …\nOpenAPI v2 spec which can be traversed and resolved for …\nOperation that can be traversed and resolved for codegen.\nParameter that can be traversed and resolved for codegen.\nPath item that can be traversed and resolved for codegen.\nResponse that can be traversed and resolved for codegen.\nResponse object.\nSecurity Scheme object.\nThe format used by spec (JSON/YAML).\nTag object.\nOpenAPI version.\nDefault coder for YAML.\nMedia range for YAML.\nWhether this method allows body in requests.\nPath to the struct/enum that represents <code>Any</code> (such as …\nAppends one map to the other whilst merging individual …\nWhether this en/decoder is built-in.\nChecks the validity of this parameter using the relative …\nThe en/decoder used for this format.\nExtension for custom coders to be used for decoding API …\nExtension for custom coders to be used for decoding API …\nExtension for custom coders to be used for decoding API …\nPath to the decoding function.\nPath to the encoding function.\nPath to the error type.\nInline extensions to this object.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFetch the description for this schema.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if this is a primitive type.\nGet a readable reference to the left variant (if it …\nGet a mutable reference to the left variant (if it exists).\nReturns the matching coder for the given media range (if …\nThe mime for this format.\nNormalizes this operation map.\nGets the parameters from the given path template and calls …\nWhether this media type should be preferred when multiple …\nRecursively removes all <code>$ref</code> values in this schema.\nConsumes this API schema, resolves the references and …\nRecursively removes all properties other than <code>$ref</code> value …\nGet a readable reference to the right variant (if it …\nGet a mutable reference to the right variant (if it …\nOverwrites the names of parameters in this operation using …\nThis field is set manually, because we don’t know the …\nThis field is set manually, because we don’t know the …\nThis field is set manually, because we don’t know the …\nAdditional crates that need to be added to the manifest.\nAdditional crates that need to be added to the manifest.\nAdditional crates that need to be added to the manifest.\nAdds or updates this definition to the map of security …\nRepresents a OpenAPI v2 error convertible. This is …\nRepresents a OpenAPI v2 operation convertible. This is …\nRepresents a OpenAPI v2 schema object convertible. This is …\nInterface for the <code>Schema</code> object.\nTrait for returning OpenAPI data type and format for the …\nValue schema for maps (<code>additional_properties</code> field).\nMutable access to <code>additional_properties</code> field, if it’s a …\nReturns whether this definition “is” or “has” <code>Any</code> …\nData type of this schema, if any (<code>type</code> field).\nThe OpenAPI type for this implementor.\nReturns the definitions used by this operation.\nDescription for this schema, if any (<code>description</code> field).\nDescription of this schema. In case the trait is derived, …\nEnum variants in this schema (if any). It’s …\nData type format used by this schema, if any (<code>format</code> …\nThe optional OpenAPI data format for this implementor.\nReturns whether this definition is cyclic.\nSchema for array definitions, if any (<code>items</code> field).\nMutable access to the <code>items</code> field, if it exists.\nName of this schema, if any.\nName of this schema. This is the name to which the …\nReturns the definition for this operation.\nMap of names and schema for properties, if it’s an …\nMutable access to <code>properties</code> field.\nReturns the raw schema for this object.\nReference to some other schema, if any (<code>$ref</code> field).\nIndicates the requirement of this schema.\nReturns the required properties (if any) for this object.\nReturns the schema with a reference (if this is an object).\nReturns a map of security definitions that will be merged …\nReturns the security scheme for this object.\nSet whether this definition is cyclic. This is done by the …\nSets the name for this schema. This is done by the …\nSet the reference to this schema.")