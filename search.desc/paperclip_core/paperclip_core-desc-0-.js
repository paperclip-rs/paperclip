searchState.loadedDescShard("paperclip_core", 0, "Core structs and traits for paperclip.\nSome headers have special meaning in OpenAPI. The user …\nOnly arrays and primitive types are allowed in parameters.\nFailed to resolve the schema because an invalid URI was …\nThe specified reference is missing in the spec.\nIf a parameter specifies body, then schema must be …\nErrors related to spec validation.\nReturns the argument unchanged.\nInterior mutability stuff.\nCalls <code>U::from(self)</code>.\nCore types and traits associated with the OpenAPI v2 …\nConversion traits and helps functions that help converting …\nUnstabilized <code>Ready</code> future.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUnstabilized <code>ready</code> function.\nDerive attribute for indicating that a type is an OpenAPI …\nDerive attribute for indicating that a type is an OpenAPI …\nMarker attribute for indicating that an object forbids …\nWorkaround for possibility to directly return HttpResponse …\nActix-specific trait for indicating that this entity can …\nWrapper for wrapping over <code>impl Responder</code> thingies (to …\nMarker attribute for indicating that the marked object can …\nMarker attribute for indicating that the marked object can …\nMarker attribute for indicating that a function is an …\nConverts your struct to support deserializing from an …\nCreates route handler with <code>paperclip::actix::web::Resource</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates route handler with <code>paperclip::actix::web::Resource</code>.\nCreates route handler with <code>paperclip::actix::web::Resource</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nModels used by OpenAPI v2.\nCreates route handler with <code>paperclip::actix::web::Resource</code>.\nCreates route handler with <code>paperclip::actix::web::Resource</code>.\nCreates route handler with <code>paperclip::actix::web::Resource</code>.\nTraits used for code and spec generation.\nUpdate the definitions map (if needed).\nUpdate the definitions map (if needed).\nUpdate the parameters list in the given operation (if …\nUpdate the parameters list in the given operation (if …\nUpdate the responses map in the given operation (if …\nUpdate the responses map in the given operation (if …\nUpdate the security map in the given operation (if needed).\nUpdate the security map in the given operation (if needed).\nUpdate the security definition map (if needed).\nUpdate the security definition map (if needed).\nOpenAPI v2 (swagger) spec generic over parameter and …\nRepresents the en/decoder for some MIME media range.\n<code>x-rust-coders</code> global extension for custom encoders and …\nPossible formats for array values in parameter.\nContact object.\nSupported data types.\nSupported data type formats.\nOpenAPI v2 spec with defaults.\nOperation with default raw parameter and response.\nParameter with the default raw schema.\nPath item with default parameter and response.\nResponse with the default raw schema.\nDefault schema if your schema doesn’t have any custom …\nRaw version of schema.\n<code>Either</code> from “either” crate. We can’t use that crate …\nExternal Documentation object.\nHeader object.\nThe HTTP method used for an operation.\nInfo object.\nItems object.\nDefault coder for JSON.\nMedia range for JSON.\nLicense object.\nWrapper for <code>mime::MediaRange</code> to support <code>BTree{Set, Map}</code>.\nOperation object.\nThe protocol used for an operation.\nRequest parameter object.\nThe location of the parameter.\nPath item object.\nReference object.\nWrapper for schema. This uses <code>Arc&lt;RwLock&lt;S&gt;&gt;</code> for interior …\nOpenAPI v2 spec which can be traversed and resolved for …\nOperation that can be traversed and resolved for codegen.\nParameter that can be traversed and resolved for codegen.\nPath item that can be traversed and resolved for codegen.\nResponse that can be traversed and resolved for codegen.\nResponse object.\nSecurity Scheme object.\nThe format used by spec (JSON/YAML).\nTag object.\nOpenAPI version.\nDefault coder for YAML.\nMedia range for YAML.\nWhether this method allows body in requests.\nPath to the struct/enum that represents <code>Any</code> (such as …\nAppends one map to the other whilst merging individual …\nWhether this en/decoder is built-in.\nChecks the validity of this parameter using the relative …\nThe en/decoder used for this format.\nExtension for custom coders to be used for decoding API …\nExtension for custom coders to be used for decoding API …\nExtension for custom coders to be used for decoding API …\nPath to the decoding function.\nPath to the encoding function.\nPath to the error type.\nInline extensions to this object.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFetch the description for this schema.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if this is a primitive type.\nGet a readable reference to the left variant (if it …\nGet a mutable reference to the left variant (if it exists).\nReturns the matching coder for the given media range (if …\nThe mime for this format.\nNormalizes this operation map.\nGets the parameters from the given path template and calls …\nWhether this media type should be preferred when multiple …\nRecursively removes all <code>$ref</code> values in this schema.\nConsumes this API schema, resolves the references and …\nConsumes this API schema, resolves the references and …\nRecursively removes all properties other than <code>$ref</code> value …\nGet a readable reference to the right variant (if it …\nGet a mutable reference to the right variant (if it …\nOverwrites the names of parameters in this operation using …\nThis field is set manually, because we don’t know the …\nThis field is set manually, because we don’t know the …\nThis field is set manually, because we don’t know the …\nAdditional crates that need to be added to the manifest.\nAdditional crates that need to be added to the manifest.\nAdditional crates that need to be added to the manifest.\nAdds or updates this definition to the map of security …\nRepresents a OpenAPI v2 error convertible. This is …\nRepresents a OpenAPI v2 operation convertible. This is …\nRepresents a OpenAPI v2 schema object convertible. This is …\nInterface for the <code>Schema</code> object.\nTrait for returning OpenAPI data type and format for the …\nValue schema for maps (<code>additional_properties</code> field).\nMutable access to <code>additional_properties</code> field, if it’s a …\nReturns whether this definition “is” or “has” <code>Any</code> …\nData type of this schema, if any (<code>type</code> field).\nThe OpenAPI type for this implementor.\nReturns the definitions used by this operation.\nDescription for this schema, if any (<code>description</code> field).\nDescription of this schema. In case the trait is derived, …\nEnum variants in this schema (if any). It’s …\nData type format used by this schema, if any (<code>format</code> …\nThe optional OpenAPI data format for this implementor.\nReturns whether this definition is cyclic.\nSchema for array definitions, if any (<code>items</code> field).\nMutable access to the <code>items</code> field, if it exists.\nName of this schema, if any.\nName of this schema. This is the name to which the …\nReturns the definition for this operation.\nMap of names and schema for properties, if it’s an …\nMutable access to <code>properties</code> field.\nReturns the raw schema for this object.\nReference to some other schema, if any (<code>$ref</code> field).\nIndicates the requirement of this schema.\nReturns the required properties (if any) for this object.\nReturns the schema with a reference (if this is an object).\nReturns a map of security definitions that will be merged …\nReturns the security scheme for this object.\nSet whether this definition is cyclic. This is done by the …\nSets the name for this schema. This is done by the …\nSet the reference to this schema.\nConvert this crates openapi v2 (<code>DefaultApiRaw</code>) to …")